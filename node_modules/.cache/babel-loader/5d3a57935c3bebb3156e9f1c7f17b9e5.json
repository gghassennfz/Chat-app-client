{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ghassen\\\\Desktop\\\\lyoum\\\\3\\\\chat-app-client\\\\src\\\\components\\\\AuthComponent\\\\Login.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { setLoginData, loginUser } from \"../../actions\";\nimport { forgotpassword, signup } from \"../../utils/Routes\";\nimport { newUserDataState } from \"../../actions/types\";\nimport spinner from \"../spinner.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Signup extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      if (this.props.loginUserData.state === \"submitting\") return;\n      this.props.loginUser();\n    };\n\n    this.onInputFieldChange = (event, field) => {\n      switch (field) {\n        case \"email\":\n          this.props.setLoginData(true, event.target.value, this.props.loginUserData.password);\n          break;\n\n        case \"password\":\n          this.props.setLoginData(true, this.props.loginUserData.email, event.target.value);\n          break;\n\n        default:\n          this.props.setLoginData(true, this.props.loginUserData.email, this.props.loginUserData.password);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.setLoginData(true, \"\", \"\");\n  }\n\n  componentWillUnmount() {\n    this.props.setLoginData(false);\n  }\n\n  render() {\n    if (!this.props.loginUserData) return \"\";\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: this.onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-warning\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          show: this.props.loginUserData.loginFailed === true,\n          variant: \"danger\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Email or password is wrong !!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form__heading\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__fieldsWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: this.props.loginUserData.email,\n          required: true,\n          autoFocus: true,\n          onChange: event => this.onInputFieldChange(event, \"email\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Password\",\n          value: this.props.loginUserData.password,\n          required: true,\n          onChange: event => this.onInputFieldChange(event, \"password\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: forgotpassword,\n        className: \"form__forgotPassword\",\n        children: \"Forgot password ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"form__submitBtn\",\n        children: this.props.loginUserData.state === newUserDataState.submitting ? /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"icon-spinner\",\n          src: spinner,\n          alt: \"spinner icon svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this) : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form__switchAuth\",\n        children: [\"Don't have an account ?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: signup,\n          className: \"form__log-or-sign\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  loginUserData\n}) => {\n  return {\n    loginUserData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setLoginData,\n  loginUser\n})(Signup);","map":{"version":3,"sources":["C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/src/components/AuthComponent/Login.jsx"],"names":["React","Link","connect","Alert","setLoginData","loginUser","forgotpassword","signup","newUserDataState","Signup","Component","onSubmit","event","preventDefault","props","loginUserData","state","onInputFieldChange","field","target","value","password","email","componentDidMount","componentWillUnmount","render","loginFailed","submitting","spinner","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { setLoginData, loginUser } from \"../../actions\";\r\nimport { forgotpassword, signup } from \"../../utils/Routes\";\r\nimport { newUserDataState } from \"../../actions/types\";\r\nimport spinner from \"../spinner.svg\";\r\n\r\nclass Signup extends React.Component {\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.props.loginUserData.state === \"submitting\") return;\r\n    this.props.loginUser();\r\n  };\r\n\r\n  onInputFieldChange = (event, field) => {\r\n    switch (field) {\r\n      case \"email\":\r\n        this.props.setLoginData(\r\n          true,\r\n          event.target.value,\r\n          this.props.loginUserData.password\r\n        );\r\n        break;\r\n      case \"password\":\r\n        this.props.setLoginData(\r\n          true,\r\n          this.props.loginUserData.email,\r\n          event.target.value\r\n        );\r\n        break;\r\n      default:\r\n        this.props.setLoginData(\r\n          true,\r\n          this.props.loginUserData.email,\r\n          this.props.loginUserData.password\r\n        );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.setLoginData(true, \"\", \"\");\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.setLoginData(false);\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.loginUserData) return \"\";\r\n    return (\r\n      <form className=\"form\" onSubmit={this.onSubmit}>\r\n        <div className=\"signup-warning\">\r\n          <Alert\r\n            show={this.props.loginUserData.loginFailed === true}\r\n            variant=\"danger\"\r\n          >\r\n            <p>Email or password is wrong !!!</p>\r\n          </Alert>\r\n        </div>\r\n\r\n        <h2 className=\"form__heading\">Login</h2>\r\n\r\n        <div className=\"form__fieldsWrapper\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={this.props.loginUserData.email}\r\n            required\r\n            autoFocus\r\n            onChange={(event) => this.onInputFieldChange(event, \"email\")}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Password\"\r\n            value={this.props.loginUserData.password}\r\n            required\r\n            onChange={(event) => this.onInputFieldChange(event, \"password\")}\r\n          />\r\n        </div>\r\n\r\n        <Link to={forgotpassword} className=\"form__forgotPassword\">\r\n          Forgot password ?\r\n        </Link>\r\n\r\n        <button type=\"submit\" className=\"form__submitBtn\">\r\n          {this.props.loginUserData.state === newUserDataState.submitting ? (\r\n            <img\r\n              className=\"icon-spinner\"\r\n              src={spinner}\r\n              alt=\"spinner icon svg\"\r\n            />\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </button>\r\n\r\n        <p className=\"form__switchAuth\">\r\n          Don't have an account ?{\" \"}\r\n          <Link to={signup} className=\"form__log-or-sign\">\r\n            Register\r\n          </Link>{\" \"}\r\n        </p>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ loginUserData }) => {\r\n  return { loginUserData };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setLoginData, loginUser })(Signup);\r\n"]},"metadata":{},"sourceType":"module"}