{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ghassen\\\\Desktop\\\\lyoum\\\\3\\\\chat-app-client\\\\src\\\\components\\\\Conversations\\\\index.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Pusher from \"pusher-js\";\nimport ProfileBar from \"../ProfileBar\";\nimport { setMessageData, sendMessage, userInserted, userUpdated, userDeleted, conversationInserted, conversationDeleted, messageInserted, addEmoji } from \"../../actions\";\nimport keys from \"../../config\";\nimport ConversationCard from \"./ConversationCard\";\nimport Message from \"./Message\";\nimport EMOJIS from \"../../utils/emojis\";\nimport defaultAvatar from \"../avatar.svg\";\nimport sendMessageIcon from \"../send.svg\";\nimport spinner from \"../spinner.svg\";\nimport \"./Conversations.scss\";\nimport { login } from \"../../utils/Routes\";\nimport history from \"../../utils/history\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Conversations extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: \"people\",\n      messageContainerClass: \"message-container\",\n      isEmojiActive: false,\n      isMsgFormActive: false\n    };\n    this.messageContainer = /*#__PURE__*/React.createRef();\n\n    this.setMessageContainerClass = isActive => {\n      this.setState({\n        messageContainerClass: isActive ? \"message-container message-container-active\" : \"message-container\"\n      });\n    };\n\n    this.setActiveTab = tab => {\n      this.setState({\n        activeTab: tab\n      });\n    };\n\n    this.isTabActive = tab => {\n      if (this.state.activeTab === tab) return \"tabs active\";\n      return \"tabs\";\n    };\n\n    this.userAvatar = user => {\n      var _user$avatar;\n\n      let image = user === null || user === void 0 ? void 0 : (_user$avatar = user.avatar) === null || _user$avatar === void 0 ? void 0 : _user$avatar.data;\n\n      if (image) {\n        image = this.bufferToBase64(image);\n        return `data:image/jpeg;base64,${image}`;\n      }\n\n      return null;\n    };\n\n    this.renderUsers = () => {\n      return this.props.users.map(user => {\n        if (!this.props.auth.user || !user) return null;\n\n        if (user._id === this.props.auth.user._id) {\n          return null;\n        }\n\n        let conversation;\n\n        for (let con of this.props.conversations.data) {\n          if (user._id === con.user1 || user._id === con.user2) {\n            conversation = con;\n            break;\n          }\n        }\n\n        return /*#__PURE__*/_jsxDEV(ConversationCard, {\n          conversation: conversation,\n          username: user.username,\n          id: user._id,\n          setMessageContainerClass: this.setMessageContainerClass,\n          avatar: user.avatar,\n          isOnline: user.isUserActive,\n          userAvatar: this.userAvatar(user) || defaultAvatar\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this);\n      });\n    };\n\n    this.getUser = conversation => {\n      let otherID;\n\n      if (this.props.auth.user._id === conversation.user1) {\n        otherID = conversation.user2;\n      } else {\n        otherID = conversation.user1;\n      }\n\n      return this.getUserWithId(otherID);\n    };\n\n    this.getUserWithId = id => {\n      for (let user of this.props.users) {\n        if (user._id === id) {\n          return user;\n        }\n      }\n    };\n\n    this.renderConversations = () => {\n      const conversations = this.props.conversations.data.map(conversation => {\n        const user = this.getUser(conversation);\n        return /*#__PURE__*/_jsxDEV(ConversationCard, {\n          conversation: conversation,\n          setMessageContainerClass: this.setMessageContainerClass,\n          username: user.username,\n          userID: user._id,\n          avatar: user.avatar,\n          isOnline: user.isUserActive,\n          userAvatar: this.userAvatar(user) || defaultAvatar,\n          lastMsgUser: conversation.messages.length ? conversation.messages[conversation.messages.length - 1].user : null,\n          lastMsg: conversation.messages[conversation.messages.length - 1] && conversation.messages[conversation.messages.length - 1].message || `You and ${user.username} are connected and can start chatting...`\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this);\n      });\n      return conversations;\n    };\n\n    this.renderMessages = () => {\n      return this.props.activeConversation.messages.map(message => {\n        if (this.props.auth.user._id === message.user) {\n          return /*#__PURE__*/_jsxDEV(Message, {\n            msg: message.message,\n            className: \"my-message\",\n            title: `${new Date(message.createdAt).toGMTString()}`\n          }, message._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 11\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(Message, {\n          msg: message.message,\n          className: \"others-message\",\n          title: new Date(message.createdAt).toDateString() + \", \" + new Date(message.createdAt).toLocaleTimeString()\n        }, message._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }, this);\n      });\n    };\n\n    this.renderEmojis = () => EMOJIS.split(\"\").map((emoji, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => {\n        this.props.addEmoji(index);\n      },\n      children: emoji\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this));\n\n    this.onMessageSubmit = event => {\n      if (event.preventDefault) event.preventDefault();\n\n      if (!this.props.message.message.trim() || this.props.message.state !== \"submitting\") {\n        this.props.sendMessage();\n      }\n    };\n  }\n\n  bufferToBase64(buffer) {\n    let binary = \"\";\n    let bytes = new Uint8Array(buffer);\n    let len = bytes.byteLength;\n\n    for (let i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n\n    return window.btoa(binary);\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n    const exp = localStorage.getItem(\"exp\");\n\n    if (!token || +exp < Date.now()) {\n      history.push(login);\n    }\n\n    const pusher = new Pusher(keys.PUSHER_KEY, {\n      cluster: keys.PUSHER_CLUSTER\n    });\n    this.userChannel = pusher.subscribe(\"users\");\n    this.conversationChannel = pusher.subscribe(\"conversations\");\n    this.messageChannel = pusher.subscribe(\"messages\");\n    this.userChannel.bind(\"inserted\", data => {\n      this.props.userInserted(data);\n    });\n    this.userChannel.bind(\"updated\", data => {\n      this.props.userUpdated(data);\n    });\n    this.userChannel.bind(\"deleted\", data => {\n      this.props.userDeleted(data._id);\n    });\n    this.conversationChannel.bind(\"inserted\", data => {\n      this.props.conversationInserted(data);\n    });\n    this.conversationChannel.bind(\"deleted\", data => {\n      this.props.conversationDeleted(data);\n    });\n    this.messageChannel.bind(\"inserted\", data => {\n      this.props.messageInserted(data);\n    });\n\n    window.onbeforeunload = () => {\n      this.userChannel.unsubscribe();\n      this.conversationChannel.unsubscribe();\n      this.messageChannel.unsubscribe();\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.messageContainer.current) {\n      let scroll = this.messageContainer.current.scrollHeight;\n      this.messageContainer.current.scrollTop = scroll;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversations\",\n      children: [/*#__PURE__*/_jsxDEV(ProfileBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"conversation-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conversation-tab\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => this.setActiveTab(\"people\"),\n            className: this.isTabActive(\"people\"),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-people-fill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => this.setActiveTab(\"messages\"),\n            className: this.isTabActive(\"messages\"),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-chat-dots-fill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), this.props.conversations.notifications ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"msg-notification\",\n              children: this.props.conversations.notifications\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conversation-users\",\n          children: [!this.props.conversations.data.length && this.state.activeTab === \"messages\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"conversation-users-o\",\n            children: \"You haven't started conversation with anyone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this) : null, this.state.activeTab === \"people\" ? this.renderUsers() : this.renderConversations()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: this.state.messageContainerClass,\n        children: !this.props.activeConversation ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"start-chatting-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Send messages to your friends.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Search for other users \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-people-fill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Start chatting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this) : this.props.activeConversation.state === \"creating\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"start-chatting-message\",\n          children: [\"Creating conversation with\", \" \", this.getUserWithId(this.props.activeConversation.id).username, \" \", /*#__PURE__*/_jsxDEV(\"picture\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"icon-spinner\",\n              src: spinner,\n              alt: \"spinner icon svg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this) : this.props.activeConversation.state !== \"failed\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"message-header\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-header-user\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                onClick: () => this.setMessageContainerClass(false),\n                className: \"bi bi-arrow-left-short\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"picture\", {\n                className: \"message-header-user-avatar\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"default-avatar\",\n                  src: this.userAvatar(this.getUser(this.props.activeConversation)) || defaultAvatar,\n                  alt: \"default avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-header-user-text\",\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"message-header-user-name\",\n                  children: this.getUser(this.props.activeConversation).username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n            ref: this.messageContainer,\n            className: \"message-messages\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"message-messages-started\",\n              children: [\"You and \", this.getUser(this.props.activeConversation).username, \" \", \"are connected and can start chatting... \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 59\n              }, this), `${new Date(this.props.activeConversation.createdAt).toDateString()}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this), this.renderMessages()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n            className: this.state.isMsgFormActive ? \"message-messageForm message-messageForm-active\" : \"message-messageForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.onMessageSubmit,\n              className: \"message-messageForm-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Type message...\",\n                required: true,\n                value: this.props.message.message,\n                onChange: event => this.props.setMessageData(event.target.value, \"typing\"),\n                onFocus: () => this.setState({\n                  isMsgFormActive: true\n                }),\n                onBlur: () => this.setState({\n                  isMsgFormActive: false\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                onClick: () => this.setState({\n                  isEmojiActive: !this.state.isEmojiActive\n                }),\n                className: \"bi bi-emoji-laughing-fill\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"\",\n                style: {\n                  display: \"none\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this), this.state.isEmojiActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"emoji-container\",\n                children: this.renderEmojis()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 21\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: this.props.message.state === \"submitting\" ? \"icon-spinner-dark\" : \"message-messageForm-sendBtn\",\n              src: this.props.message.state === \"submitting\" ? spinner : sendMessageIcon,\n              alt: \"send message icon svg\",\n              onClick: this.onMessageSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"start-chatting-message\",\n          children: \"Something went wrong ! try reloading this page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), this.props.appDataLoading !== \"loaded\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-data-loading\",\n        children: this.props.appDataLoading === \"failed\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Something went wrong ! Try reloading this page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"icon-spinner\",\n          src: spinner,\n          alt: \"spinner icon svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  auth,\n  users,\n  conversations,\n  activeConversation,\n  message,\n  appDataLoading\n}) => {\n  return {\n    auth,\n    users,\n    conversations,\n    activeConversation,\n    message,\n    appDataLoading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setMessageData,\n  sendMessage,\n  userInserted,\n  userUpdated,\n  userDeleted,\n  conversationInserted,\n  conversationDeleted,\n  messageInserted,\n  addEmoji\n})(Conversations);","map":{"version":3,"sources":["C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/src/components/Conversations/index.jsx"],"names":["React","Component","connect","Pusher","ProfileBar","setMessageData","sendMessage","userInserted","userUpdated","userDeleted","conversationInserted","conversationDeleted","messageInserted","addEmoji","keys","ConversationCard","Message","EMOJIS","login","history","Conversations","state","activeTab","messageContainerClass","isEmojiActive","isMsgFormActive","messageContainer","createRef","setMessageContainerClass","isActive","setState","setActiveTab","tab","isTabActive","userAvatar","user","image","avatar","data","bufferToBase64","renderUsers","props","users","map","auth","_id","conversation","con","conversations","user1","user2","username","isUserActive","defaultAvatar","getUser","otherID","getUserWithId","id","renderConversations","messages","length","message","renderMessages","activeConversation","Date","createdAt","toGMTString","toDateString","toLocaleTimeString","renderEmojis","split","emoji","index","onMessageSubmit","event","preventDefault","trim","buffer","binary","bytes","Uint8Array","len","byteLength","i","String","fromCharCode","window","btoa","componentDidMount","token","localStorage","getItem","exp","now","push","pusher","PUSHER_KEY","cluster","PUSHER_CLUSTER","userChannel","subscribe","conversationChannel","messageChannel","bind","onbeforeunload","unsubscribe","componentDidUpdate","current","scroll","scrollHeight","scrollTop","render","notifications","spinner","target","value","display","sendMessageIcon","appDataLoading","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Pusher from \"pusher-js\";\r\n\r\nimport ProfileBar from \"../ProfileBar\";\r\nimport {\r\n  setMessageData,\r\n  sendMessage,\r\n  userInserted,\r\n  userUpdated,\r\n  userDeleted,\r\n  conversationInserted,\r\n  conversationDeleted,\r\n  messageInserted,\r\n  addEmoji,\r\n} from \"../../actions\";\r\nimport keys from \"../../config\";\r\nimport ConversationCard from \"./ConversationCard\";\r\nimport Message from \"./Message\";\r\nimport EMOJIS from \"../../utils/emojis\";\r\nimport defaultAvatar from \"../avatar.svg\";\r\nimport sendMessageIcon from \"../send.svg\";\r\nimport spinner from \"../spinner.svg\";\r\nimport \"./Conversations.scss\";\r\nimport { login } from \"../../utils/Routes\";\r\nimport history from \"../../utils/history\";\r\n\r\nclass Conversations extends Component {\r\n  state = {\r\n    activeTab: \"people\",\r\n    messageContainerClass: \"message-container\",\r\n    isEmojiActive: false,\r\n    isMsgFormActive: false,\r\n  };\r\n\r\n  messageContainer = React.createRef();\r\n\r\n  setMessageContainerClass = (isActive) => {\r\n    this.setState({\r\n      messageContainerClass: isActive\r\n        ? \"message-container message-container-active\"\r\n        : \"message-container\",\r\n    });\r\n  };\r\n\r\n  setActiveTab = (tab) => {\r\n    this.setState({ activeTab: tab });\r\n  };\r\n\r\n  isTabActive = (tab) => {\r\n    if (this.state.activeTab === tab) return \"tabs active\";\r\n    return \"tabs\";\r\n  };\r\n\r\n  bufferToBase64(buffer) {\r\n    let binary = \"\";\r\n    let bytes = new Uint8Array(buffer);\r\n    let len = bytes.byteLength;\r\n    for (let i = 0; i < len; i++) {\r\n      binary += String.fromCharCode(bytes[i]);\r\n    }\r\n    return window.btoa(binary);\r\n  }\r\n\r\n  userAvatar = (user) => {\r\n    let image = user?.avatar?.data;\r\n    if (image) {\r\n      image = this.bufferToBase64(image);\r\n      return `data:image/jpeg;base64,${image}`;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  renderUsers = () => {\r\n    return this.props.users.map((user) => {\r\n      if (!this.props.auth.user || !user) return null;\r\n      if (user._id === this.props.auth.user._id) {\r\n        return null;\r\n      }\r\n\r\n      let conversation;\r\n      for (let con of this.props.conversations.data) {\r\n        if (user._id === con.user1 || user._id === con.user2) {\r\n          conversation = con;\r\n          break;\r\n        }\r\n      }\r\n\r\n      return (\r\n        <ConversationCard\r\n          conversation={conversation}\r\n          key={user._id}\r\n          username={user.username}\r\n          id={user._id}\r\n          setMessageContainerClass={this.setMessageContainerClass}\r\n          avatar={user.avatar}\r\n          isOnline={user.isUserActive}\r\n          userAvatar={this.userAvatar(user) || defaultAvatar}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  getUser = (conversation) => {\r\n    let otherID;\r\n    if (this.props.auth.user._id === conversation.user1) {\r\n      otherID = conversation.user2;\r\n    } else {\r\n      otherID = conversation.user1;\r\n    }\r\n\r\n    return this.getUserWithId(otherID);\r\n  };\r\n\r\n  getUserWithId = (id) => {\r\n    for (let user of this.props.users) {\r\n      if (user._id === id) {\r\n        return user;\r\n      }\r\n    }\r\n  };\r\n\r\n  renderConversations = () => {\r\n    const conversations = this.props.conversations.data.map((conversation) => {\r\n      const user = this.getUser(conversation);\r\n\r\n      return (\r\n        <ConversationCard\r\n          conversation={conversation}\r\n          setMessageContainerClass={this.setMessageContainerClass}\r\n          key={user._id}\r\n          username={user.username}\r\n          userID={user._id}\r\n          avatar={user.avatar}\r\n          isOnline={user.isUserActive}\r\n          userAvatar={this.userAvatar(user) || defaultAvatar}\r\n          lastMsgUser={\r\n            conversation.messages.length\r\n              ? conversation.messages[conversation.messages.length - 1].user\r\n              : null\r\n          }\r\n          lastMsg={\r\n            (conversation.messages[conversation.messages.length - 1] &&\r\n              conversation.messages[conversation.messages.length - 1]\r\n                .message) ||\r\n            `You and ${user.username} are connected and can start chatting...`\r\n          }\r\n        />\r\n      );\r\n    });\r\n\r\n    return conversations;\r\n  };\r\n\r\n  renderMessages = () => {\r\n    return this.props.activeConversation.messages.map((message) => {\r\n      if (this.props.auth.user._id === message.user) {\r\n        return (\r\n          <Message\r\n            key={message._id}\r\n            msg={message.message}\r\n            className=\"my-message\"\r\n            title={`${new Date(message.createdAt).toGMTString()}`}\r\n          />\r\n        );\r\n      }\r\n      return (\r\n        <Message\r\n          key={message._id}\r\n          msg={message.message}\r\n          className=\"others-message\"\r\n          title={\r\n            new Date(message.createdAt).toDateString() +\r\n            \", \" +\r\n            new Date(message.createdAt).toLocaleTimeString()\r\n          }\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  renderEmojis = () =>\r\n    EMOJIS.split(\"\").map((emoji, index) => (\r\n      <span\r\n        onClick={() => {\r\n          this.props.addEmoji(index);\r\n        }}\r\n        key={index}\r\n      >\r\n        {emoji}\r\n      </span>\r\n    ));\r\n\r\n  onMessageSubmit = (event) => {\r\n    if (event.preventDefault) event.preventDefault();\r\n\r\n    if (\r\n      !this.props.message.message.trim() ||\r\n      this.props.message.state !== \"submitting\"\r\n    ) {\r\n      this.props.sendMessage();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem(\"token\");\r\n    const exp = localStorage.getItem(\"exp\");\r\n\r\n    if (!token || +exp < Date.now()) {\r\n      history.push(login);\r\n    }\r\n\r\n    const pusher = new Pusher(keys.PUSHER_KEY, {\r\n      cluster: keys.PUSHER_CLUSTER,\r\n    });\r\n\r\n    this.userChannel = pusher.subscribe(\"users\");\r\n    this.conversationChannel = pusher.subscribe(\"conversations\");\r\n    this.messageChannel = pusher.subscribe(\"messages\");\r\n\r\n    this.userChannel.bind(\"inserted\", (data) => {\r\n      this.props.userInserted(data);\r\n    });\r\n\r\n    this.userChannel.bind(\"updated\", (data) => {\r\n      this.props.userUpdated(data);\r\n    });\r\n\r\n    this.userChannel.bind(\"deleted\", (data) => {\r\n      this.props.userDeleted(data._id);\r\n    });\r\n\r\n    this.conversationChannel.bind(\"inserted\", (data) => {\r\n      this.props.conversationInserted(data);\r\n    });\r\n\r\n    this.conversationChannel.bind(\"deleted\", (data) => {\r\n      this.props.conversationDeleted(data);\r\n    });\r\n\r\n    this.messageChannel.bind(\"inserted\", (data) => {\r\n      this.props.messageInserted(data);\r\n    });\r\n\r\n    window.onbeforeunload = () => {\r\n      this.userChannel.unsubscribe();\r\n      this.conversationChannel.unsubscribe();\r\n      this.messageChannel.unsubscribe();\r\n    };\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.messageContainer.current) {\r\n      let scroll = this.messageContainer.current.scrollHeight;\r\n      this.messageContainer.current.scrollTop = scroll;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"conversations\">\r\n        <ProfileBar />\r\n        <aside className=\"conversation-bar\">\r\n          <div className=\"conversation-tab\">\r\n            <span\r\n              onClick={() => this.setActiveTab(\"people\")}\r\n              className={this.isTabActive(\"people\")}\r\n            >\r\n              <i className=\"bi bi-people-fill\"></i>\r\n            </span>\r\n            <span\r\n              onClick={() => this.setActiveTab(\"messages\")}\r\n              className={this.isTabActive(\"messages\")}\r\n            >\r\n              <i className=\"bi bi-chat-dots-fill\"></i>\r\n              {this.props.conversations.notifications ? (\r\n                <span className=\"msg-notification\">\r\n                  {this.props.conversations.notifications}\r\n                </span>\r\n              ) : null}\r\n            </span>\r\n          </div>\r\n          <div className=\"conversation-users\">\r\n            {!this.props.conversations.data.length &&\r\n            this.state.activeTab === \"messages\" ? (\r\n              <p className=\"conversation-users-o\">\r\n                You haven't started conversation with anyone\r\n              </p>\r\n            ) : null}\r\n\r\n            {this.state.activeTab === \"people\"\r\n              ? this.renderUsers()\r\n              : this.renderConversations()}\r\n          </div>\r\n        </aside>\r\n        <section className={this.state.messageContainerClass}>\r\n          {!this.props.activeConversation ? (\r\n            <div className=\"start-chatting-message\">\r\n              <p>Send messages to your friends.</p>\r\n              <p>\r\n                Search for other users <i className=\"bi bi-people-fill\"></i>\r\n              </p>\r\n              <p>Start chatting</p>\r\n            </div>\r\n          ) : this.props.activeConversation.state === \"creating\" ? (\r\n            <div className=\"start-chatting-message\">\r\n              Creating conversation with{\" \"}\r\n              {this.getUserWithId(this.props.activeConversation.id).username}{\" \"}\r\n              <picture>\r\n                <img\r\n                  className=\"icon-spinner\"\r\n                  src={spinner}\r\n                  alt=\"spinner icon svg\"\r\n                />\r\n              </picture>\r\n            </div>\r\n          ) : this.props.activeConversation.state !== \"failed\" ? (\r\n            <>\r\n              <header className=\"message-header\">\r\n                <div className=\"message-header-user\">\r\n                  <i\r\n                    onClick={() => this.setMessageContainerClass(false)}\r\n                    className=\"bi bi-arrow-left-short\"\r\n                  ></i>\r\n                  <picture className=\"message-header-user-avatar\">\r\n                    <img\r\n                      className=\"default-avatar\"\r\n                      src={\r\n                        this.userAvatar(\r\n                          this.getUser(this.props.activeConversation)\r\n                        ) || defaultAvatar\r\n                      }\r\n                      alt=\"default avatar\"\r\n                    />\r\n                  </picture>\r\n                  <div className=\"message-header-user-text\">\r\n                    <h5 className=\"message-header-user-name\">\r\n                      {this.getUser(this.props.activeConversation).username}\r\n                    </h5>\r\n                  </div>\r\n                </div>\r\n              </header>\r\n              <main ref={this.messageContainer} className=\"message-messages\">\r\n                <p className=\"message-messages-started\">\r\n                  You and {this.getUser(this.props.activeConversation).username}{\" \"}\r\n                  are connected and can start chatting... <br />\r\n                  {`${new Date(\r\n                    this.props.activeConversation.createdAt\r\n                  ).toDateString()}`}\r\n                </p>\r\n                {this.renderMessages()}\r\n              </main>\r\n              <footer\r\n                className={\r\n                  this.state.isMsgFormActive\r\n                    ? \"message-messageForm message-messageForm-active\"\r\n                    : \"message-messageForm\"\r\n                }\r\n              >\r\n                <form\r\n                  onSubmit={this.onMessageSubmit}\r\n                  className=\"message-messageForm-field\"\r\n                >\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type message...\"\r\n                    required\r\n                    value={this.props.message.message}\r\n                    onChange={(event) =>\r\n                      this.props.setMessageData(event.target.value, \"typing\")\r\n                    }\r\n                    onFocus={() => this.setState({ isMsgFormActive: true })}\r\n                    onBlur={() => this.setState({ isMsgFormActive: false })}\r\n                  />\r\n\r\n                  <i\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        isEmojiActive: !this.state.isEmojiActive,\r\n                      })\r\n                    }\r\n                    className=\"bi bi-emoji-laughing-fill\"\r\n                  ></i>\r\n\r\n                  <input type=\"submit\" value=\"\" style={{ display: \"none\" }} />\r\n\r\n                  {this.state.isEmojiActive ? (\r\n                    <div className=\"emoji-container\">{this.renderEmojis()}</div>\r\n                  ) : null}\r\n                </form>\r\n                <img\r\n                  className={\r\n                    this.props.message.state === \"submitting\"\r\n                      ? \"icon-spinner-dark\"\r\n                      : \"message-messageForm-sendBtn\"\r\n                  }\r\n                  src={\r\n                    this.props.message.state === \"submitting\"\r\n                      ? spinner\r\n                      : sendMessageIcon\r\n                  }\r\n                  alt=\"send message icon svg\"\r\n                  onClick={this.onMessageSubmit}\r\n                />\r\n              </footer>\r\n            </>\r\n          ) : (\r\n            <div className=\"start-chatting-message\">\r\n              Something went wrong ! try reloading this page\r\n            </div>\r\n          )}\r\n        </section>\r\n        {this.props.appDataLoading !== \"loaded\" ? (\r\n          <div className=\"app-data-loading\">\r\n            {this.props.appDataLoading === \"failed\" ? (\r\n              <p>Something went wrong ! Try reloading this page</p>\r\n            ) : (\r\n              <img\r\n                className=\"icon-spinner\"\r\n                src={spinner}\r\n                alt=\"spinner icon svg\"\r\n              />\r\n            )}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  auth,\r\n  users,\r\n  conversations,\r\n  activeConversation,\r\n  message,\r\n  appDataLoading,\r\n}) => {\r\n  return {\r\n    auth,\r\n    users,\r\n    conversations,\r\n    activeConversation,\r\n    message,\r\n    appDataLoading,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setMessageData,\r\n  sendMessage,\r\n  userInserted,\r\n  userUpdated,\r\n  userDeleted,\r\n  conversationInserted,\r\n  conversationDeleted,\r\n  messageInserted,\r\n  addEmoji,\r\n})(Conversations);\r\n"]},"metadata":{},"sourceType":"module"}