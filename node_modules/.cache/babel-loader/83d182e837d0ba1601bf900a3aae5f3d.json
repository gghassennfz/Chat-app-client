{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ghassen\\\\Desktop\\\\lyoum\\\\3\\\\chat-app-client\\\\src\\\\components\\\\AuthComponent\\\\Signup.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../utils/Routes\";\nimport { setNewUserData, signupUser } from \"../../actions\";\nimport { newUserDataState } from \"../../actions/types\";\nimport Alert from \"react-bootstrap/Alert\";\nimport spinner from \"../spinner.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Signup extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      if (this.props.newUserData.state === newUserDataState.submitting) return; // password length should be greater than 12\n\n      if (this.props.newUserData.password.length >= 12) {\n        // password and confirm password should be same\n        if (this.props.newUserData.password === this.props.newUserData.confirmPassword) {\n          this.props.setNewUserData(true, this.props.newUserData.username, this.props.newUserData.email, this.props.newUserData.password, this.props.newUserData.confirmPassword, newUserDataState.submitting);\n          this.props.signupUser();\n        } else {\n          this.props.setNewUserData(true, this.props.newUserData.username, this.props.newUserData.email, this.props.newUserData.password, this.props.newUserData.confirmPassword, newUserDataState.unmatchedValidation);\n        }\n      } else {\n        this.props.setNewUserData(true, this.props.newUserData.username, this.props.newUserData.email, this.props.newUserData.password, this.props.newUserData.confirmPassword, newUserDataState.lengthValidation);\n      }\n    };\n\n    this.onSignupFieldChange = (event, field) => {\n      switch (field) {\n        case \"username\":\n          this.props.setNewUserData(true, event.target.value, this.props.newUserData.email, this.props.newUserData.password, this.props.newUserData.confirmPassword, newUserDataState.typing);\n          break;\n\n        case \"email\":\n          this.props.setNewUserData(true, this.props.newUserData.username, event.target.value, this.props.newUserData.password, this.props.newUserData.confirmPassword, newUserDataState.typing);\n          break;\n\n        case \"password\":\n          this.props.setNewUserData(true, this.props.newUserData.username, this.props.newUserData.email, event.target.value, this.props.newUserData.confirmPassword, newUserDataState.typing);\n          break;\n\n        case \"confirmPassword\":\n          this.props.setNewUserData(true, this.props.newUserData.username, this.props.newUserData.email, this.props.newUserData.password, event.target.value, newUserDataState.typing);\n          break;\n\n        default:\n          this.props.setNewUserData(true, this.props.newUserData.username, this.props.newUserData.email, this.props.newUserData.password, this.props.newUserData.confirmPassword, newUserDataState.typing);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.setNewUserData(true, \"\", \"\", \"\", \"\", newUserDataState.emptyFields);\n  }\n\n  componentWillUnmount() {\n    if (this.props.newUserData.state !== newUserDataState.submitted) {\n      this.props.setNewUserData(false);\n    }\n  }\n\n  render() {\n    if (this.props.newUserData) {\n      const failed = this.props.newUserData.state.startsWith(\"failed\") || this.props.newUserData.state.startsWith(\"validation\");\n      let failedMessage;\n\n      if (failed) {\n        failedMessage = this.props.newUserData.state.split(\",\")[1];\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-warning\",\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            show: failed,\n            variant: \"danger\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: failedMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"form__heading\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__fieldsWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Username\",\n            value: this.props.newUserData.username,\n            onChange: event => this.onSignupFieldChange(event, \"username\"),\n            required: true,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: this.props.newUserData.email,\n            onChange: event => this.onSignupFieldChange(event, \"email\"),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Password\",\n            value: this.props.newUserData.password,\n            onChange: event => this.onSignupFieldChange(event, \"password\"),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Confirm password\",\n            value: this.props.newUserData.confirmPassword,\n            onChange: event => this.onSignupFieldChange(event, \"confirmPassword\"),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"form__submitBtn\",\n          children: this.props.newUserData.state === newUserDataState.submitting ? /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"icon-spinner\",\n            src: spinner,\n            alt: \"spinner icon svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this) : \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"form__switchAuth\",\n          children: [\"Already have an account ?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: login,\n            className: \"form__log-or-sign\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this);\n    } else {\n      return \"\";\n    }\n  }\n\n}\n\nconst mapStateToProps = ({\n  newUserData\n}) => {\n  return {\n    newUserData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setNewUserData,\n  signupUser\n})(Signup);","map":{"version":3,"sources":["C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/src/components/AuthComponent/Signup.jsx"],"names":["React","Link","connect","login","setNewUserData","signupUser","newUserDataState","Alert","Signup","Component","onSubmit","event","preventDefault","props","newUserData","state","submitting","password","length","confirmPassword","username","email","unmatchedValidation","lengthValidation","onSignupFieldChange","field","target","value","typing","componentDidMount","emptyFields","componentWillUnmount","submitted","render","failed","startsWith","failedMessage","split","spinner","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { login } from \"../../utils/Routes\";\r\nimport { setNewUserData, signupUser } from \"../../actions\";\r\nimport { newUserDataState } from \"../../actions/types\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport spinner from \"../spinner.svg\";\r\n\r\nclass Signup extends React.Component {\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.props.newUserData.state === newUserDataState.submitting) return;\r\n\r\n    // password length should be greater than 12\r\n    if (this.props.newUserData.password.length >= 12) {\r\n      // password and confirm password should be same\r\n      if (\r\n        this.props.newUserData.password ===\r\n        this.props.newUserData.confirmPassword\r\n      ) {\r\n        this.props.setNewUserData(\r\n          true,\r\n          this.props.newUserData.username,\r\n          this.props.newUserData.email,\r\n          this.props.newUserData.password,\r\n          this.props.newUserData.confirmPassword,\r\n          newUserDataState.submitting\r\n        );\r\n\r\n        this.props.signupUser();\r\n      } else {\r\n        this.props.setNewUserData(\r\n          true,\r\n          this.props.newUserData.username,\r\n          this.props.newUserData.email,\r\n          this.props.newUserData.password,\r\n          this.props.newUserData.confirmPassword,\r\n          newUserDataState.unmatchedValidation\r\n        );\r\n      }\r\n    } else {\r\n      this.props.setNewUserData(\r\n        true,\r\n        this.props.newUserData.username,\r\n        this.props.newUserData.email,\r\n        this.props.newUserData.password,\r\n        this.props.newUserData.confirmPassword,\r\n        newUserDataState.lengthValidation\r\n      );\r\n    }\r\n  };\r\n\r\n  onSignupFieldChange = (event, field) => {\r\n    switch (field) {\r\n      case \"username\":\r\n        this.props.setNewUserData(\r\n          true,\r\n          event.target.value,\r\n          this.props.newUserData.email,\r\n          this.props.newUserData.password,\r\n          this.props.newUserData.confirmPassword,\r\n          newUserDataState.typing\r\n        );\r\n        break;\r\n      case \"email\":\r\n        this.props.setNewUserData(\r\n          true,\r\n          this.props.newUserData.username,\r\n          event.target.value,\r\n          this.props.newUserData.password,\r\n          this.props.newUserData.confirmPassword,\r\n          newUserDataState.typing\r\n        );\r\n        break;\r\n      case \"password\":\r\n        this.props.setNewUserData(\r\n          true,\r\n          this.props.newUserData.username,\r\n          this.props.newUserData.email,\r\n          event.target.value,\r\n          this.props.newUserData.confirmPassword,\r\n          newUserDataState.typing\r\n        );\r\n        break;\r\n      case \"confirmPassword\":\r\n        this.props.setNewUserData(\r\n          true,\r\n          this.props.newUserData.username,\r\n          this.props.newUserData.email,\r\n          this.props.newUserData.password,\r\n          event.target.value,\r\n          newUserDataState.typing\r\n        );\r\n        break;\r\n      default:\r\n        this.props.setNewUserData(\r\n          true,\r\n          this.props.newUserData.username,\r\n          this.props.newUserData.email,\r\n          this.props.newUserData.password,\r\n          this.props.newUserData.confirmPassword,\r\n          newUserDataState.typing\r\n        );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.setNewUserData(\r\n      true,\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      newUserDataState.emptyFields\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.props.newUserData.state !== newUserDataState.submitted) {\r\n      this.props.setNewUserData(false);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.newUserData) {\r\n      const failed =\r\n        this.props.newUserData.state.startsWith(\"failed\") ||\r\n        this.props.newUserData.state.startsWith(\"validation\");\r\n\r\n      let failedMessage;\r\n      if (failed) {\r\n        failedMessage = this.props.newUserData.state.split(\",\")[1];\r\n      }\r\n\r\n      return (\r\n        <form className=\"form\" onSubmit={this.onSubmit}>\r\n          <div className=\"signup-warning\">\r\n            <Alert show={failed} variant=\"danger\">\r\n              <p>{failedMessage}</p>\r\n            </Alert>\r\n          </div>\r\n          <h2 className=\"form__heading\">Sign up</h2>\r\n\r\n          <div className=\"form__fieldsWrapper\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              value={this.props.newUserData.username}\r\n              onChange={(event) => this.onSignupFieldChange(event, \"username\")}\r\n              required\r\n              autoFocus\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={this.props.newUserData.email}\r\n              onChange={(event) => this.onSignupFieldChange(event, \"email\")}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Password\"\r\n              value={this.props.newUserData.password}\r\n              onChange={(event) => this.onSignupFieldChange(event, \"password\")}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Confirm password\"\r\n              value={this.props.newUserData.confirmPassword}\r\n              onChange={(event) =>\r\n                this.onSignupFieldChange(event, \"confirmPassword\")\r\n              }\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"form__submitBtn\">\r\n            {this.props.newUserData.state === newUserDataState.submitting ? (\r\n              <img\r\n                className=\"icon-spinner\"\r\n                src={spinner}\r\n                alt=\"spinner icon svg\"\r\n              />\r\n            ) : (\r\n              \"Signup\"\r\n            )}\r\n          </button>\r\n\r\n          <p className=\"form__switchAuth\">\r\n            Already have an account ?{\" \"}\r\n            <Link to={login} className=\"form__log-or-sign\">\r\n              Login\r\n            </Link>{\" \"}\r\n          </p>\r\n        </form>\r\n      );\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ newUserData }) => {\r\n  return { newUserData };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setNewUserData, signupUser })(Signup);\r\n"]},"metadata":{},"sourceType":"module"}