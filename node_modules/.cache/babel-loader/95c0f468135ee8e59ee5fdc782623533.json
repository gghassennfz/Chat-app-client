{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ghassen\\\\Desktop\\\\lyoum\\\\3\\\\chat-app-client\\\\src\\\\components\\\\Conversations\\\\ConversationCard.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setActiveConversation, createConversation } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ConversationCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSetActiveConver = () => {\n      if (!this.props.conversation) {\n        this.props.createConversation(this.props.id);\n      } else {\n        this.props.setActiveConversation(this.props.conversation);\n      }\n    };\n  }\n\n  render() {\n    let cardClass;\n\n    if (this.props.activeConversation) {\n      cardClass = this.props.activeConversation.user1 === this.props.userID || this.props.activeConversation.user2 === this.props.userID ? \"conversation-card conversation-card-active\" : \"conversation-card\";\n    } else {\n      cardClass = \"conversation-card\";\n    }\n\n    const currentUserMsg = this.props.lastMsgUser === this.props.auth.user._id;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => {\n        this.onSetActiveConver();\n        this.props.setMessageContainerClass(true);\n      },\n      className: cardClass,\n      children: [/*#__PURE__*/_jsxDEV(\"picture\", {\n        className: \"conversation-card-avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.props.userAvatar,\n          alt: \"default avatar for users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversation-card-usertext\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"conversation-card-username\",\n          children: this.props.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), this.props.lastMsg ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: currentUserMsg ? \"conversation-card-lastMsg\" : \"conversation-card-lastMsg conversation-card-lastMsg-other\",\n          children: [currentUserMsg ? \"You: \" : null, this.props.lastMsg]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  activeConversation,\n  auth\n}) => {\n  return {\n    activeConversation,\n    auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setActiveConversation,\n  createConversation\n})(ConversationCard);","map":{"version":3,"sources":["C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/src/components/Conversations/ConversationCard.jsx"],"names":["React","connect","setActiveConversation","createConversation","ConversationCard","Component","onSetActiveConver","props","conversation","id","render","cardClass","activeConversation","user1","userID","user2","currentUserMsg","lastMsgUser","auth","user","_id","setMessageContainerClass","userAvatar","username","lastMsg","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,qBAAT,EAAgCC,kBAAhC,QAA0D,eAA1D;;;AAEA,MAAMC,gBAAN,SAA+BJ,KAAK,CAACK,SAArC,CAA+C;AAAA;AAAA;;AAAA,SAC7CC,iBAD6C,GACzB,MAAM;AACxB,UAAI,CAAC,KAAKC,KAAL,CAAWC,YAAhB,EAA8B;AAC5B,aAAKD,KAAL,CAAWJ,kBAAX,CAA8B,KAAKI,KAAL,CAAWE,EAAzC;AACD,OAFD,MAEO;AACL,aAAKF,KAAL,CAAWL,qBAAX,CAAiC,KAAKK,KAAL,CAAWC,YAA5C;AACD;AACF,KAP4C;AAAA;;AAS7CE,EAAAA,MAAM,GAAG;AACP,QAAIC,SAAJ;;AACA,QAAI,KAAKJ,KAAL,CAAWK,kBAAf,EAAmC;AACjCD,MAAAA,SAAS,GACP,KAAKJ,KAAL,CAAWK,kBAAX,CAA8BC,KAA9B,KAAwC,KAAKN,KAAL,CAAWO,MAAnD,IACA,KAAKP,KAAL,CAAWK,kBAAX,CAA8BG,KAA9B,KAAwC,KAAKR,KAAL,CAAWO,MADnD,GAEI,4CAFJ,GAGI,mBAJN;AAKD,KAND,MAMO;AACLH,MAAAA,SAAS,GAAG,mBAAZ;AACD;;AAED,UAAMK,cAAc,GAAG,KAAKT,KAAL,CAAWU,WAAX,KAA2B,KAAKV,KAAL,CAAWW,IAAX,CAAgBC,IAAhB,CAAqBC,GAAvE;AAEA,wBACE;AACE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKd,iBAAL;AACA,aAAKC,KAAL,CAAWc,wBAAX,CAAoC,IAApC;AACD,OAJH;AAKE,MAAA,SAAS,EAAEV,SALb;AAAA,8BAOE;AAAS,QAAA,SAAS,EAAC,0BAAnB;AAAA,+BACE;AAAK,UAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWe,UAArB;AAAiC,UAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,4BAAd;AAAA,oBAA4C,KAAKf,KAAL,CAAWgB;AAAvD;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,KAAKhB,KAAL,CAAWiB,OAAX,gBACC;AACE,UAAA,SAAS,EACPR,cAAc,GACV,2BADU,GAEV,2DAJR;AAAA,qBAOGA,cAAc,GAAG,OAAH,GAAa,IAP9B,EAQG,KAAKT,KAAL,CAAWiB,OARd;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAWG,IAbN;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;;AAnD4C;;AAsD/C,MAAMC,eAAe,GAAG,CAAC;AAAEb,EAAAA,kBAAF;AAAsBM,EAAAA;AAAtB,CAAD,KAAkC;AACxD,SAAO;AAAEN,IAAAA,kBAAF;AAAsBM,IAAAA;AAAtB,GAAP;AACD,CAFD;;AAIA,eAAejB,OAAO,CAACwB,eAAD,EAAkB;AACtCvB,EAAAA,qBADsC;AAEtCC,EAAAA;AAFsC,CAAlB,CAAP,CAGZC,gBAHY,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setActiveConversation, createConversation } from \"../../actions\";\r\n\r\nclass ConversationCard extends React.Component {\r\n  onSetActiveConver = () => {\r\n    if (!this.props.conversation) {\r\n      this.props.createConversation(this.props.id);\r\n    } else {\r\n      this.props.setActiveConversation(this.props.conversation);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let cardClass;\r\n    if (this.props.activeConversation) {\r\n      cardClass =\r\n        this.props.activeConversation.user1 === this.props.userID ||\r\n        this.props.activeConversation.user2 === this.props.userID\r\n          ? \"conversation-card conversation-card-active\"\r\n          : \"conversation-card\";\r\n    } else {\r\n      cardClass = \"conversation-card\";\r\n    }\r\n\r\n    const currentUserMsg = this.props.lastMsgUser === this.props.auth.user._id;\r\n\r\n    return (\r\n      <div\r\n        onClick={() => {\r\n          this.onSetActiveConver();\r\n          this.props.setMessageContainerClass(true);\r\n        }}\r\n        className={cardClass}\r\n      >\r\n        <picture className=\"conversation-card-avatar\">\r\n          <img src={this.props.userAvatar} alt=\"default avatar for users\" />\r\n        </picture>\r\n        <div className=\"conversation-card-usertext\">\r\n          <h6 className=\"conversation-card-username\">{this.props.username}</h6>\r\n          {this.props.lastMsg ? (\r\n            <p\r\n              className={\r\n                currentUserMsg\r\n                  ? \"conversation-card-lastMsg\"\r\n                  : \"conversation-card-lastMsg conversation-card-lastMsg-other\"\r\n              }\r\n            >\r\n              {currentUserMsg ? \"You: \" : null}\r\n              {this.props.lastMsg}\r\n            </p>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ activeConversation, auth }) => {\r\n  return { activeConversation, auth };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setActiveConversation,\r\n  createConversation,\r\n})(ConversationCard);\r\n"]},"metadata":{},"sourceType":"module"}