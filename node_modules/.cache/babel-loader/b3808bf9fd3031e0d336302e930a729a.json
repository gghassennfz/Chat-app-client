{"ast":null,"code":"import React,{useEffect}from\"react\";import{connect}from\"react-redux\";import{resendAccountActivateEmail}from\"../../actions\";import{newUserDataState}from\"../../actions/types\";import history from\"../../utils/history\";import{signup,conversations}from\"../../utils/Routes\";import logo from\"../logo.png\";import spinner from\"../spinner.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function EmailConfirmation(props){useEffect(function(){var token=localStorage.getItem(\"token\");var exp=localStorage.getItem(\"exp\");if(token&&+exp>=Date.now()){return history.push(conversations);}},[]);var resendEmail=function resendEmail(){if(props.newUserData&&props.newUserData.state===newUserDataState.submitted){props.resendAccountActivateEmail();}};if(props.newUserData){return/*#__PURE__*/_jsx(\"div\",{className:\"confirmation\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation__wrapper\",children:[/*#__PURE__*/_jsx(\"picture\",{className:\"chat-app-logo\",children:/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"chat app logo\"})}),/*#__PURE__*/_jsx(\"h1\",{className:\"confirmation__heading\",children:\"Please confirm you email address\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"confirmation__desc\",children:[\"An email has been sent to your mail account. Please check your email to\",\" \",/*#__PURE__*/_jsxs(\"span\",{children:[\"activate chat app account. \",/*#__PURE__*/_jsx(\"br\",{})]}),\"If you don't see any email in inbox, check promotions tab or spam folder.\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"confirmation__resendEmailQue\",children:\"Didn't get any email?\"}),/*#__PURE__*/_jsx(\"button\",{onClick:resendEmail,className:\"confirmation__resendBtn\",children:props.newUserData.state===newUserDataState.resubmitting?/*#__PURE__*/_jsx(\"img\",{className:\"icon-spinner-dark\",src:spinner,alt:\"spinner icon svg\"}):\"Resend email\"})]})});}else{history.push(signup);return\"\";}}var mapStateToProps=function mapStateToProps(_ref){var newUserData=_ref.newUserData;return{newUserData:newUserData};};export default connect(mapStateToProps,{resendAccountActivateEmail:resendAccountActivateEmail})(EmailConfirmation);","map":{"version":3,"sources":["C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/src/components/AuthComponent/EmailConfirmation.jsx"],"names":["React","useEffect","connect","resendAccountActivateEmail","newUserDataState","history","signup","conversations","logo","EmailConfirmation","props","token","localStorage","getItem","exp","Date","now","push","resendEmail","newUserData","state","submitted","resubmitting","spinner","mapStateToProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OAASC,0BAAT,KAA2C,eAA3C,CACA,OAASC,gBAAT,KAAiC,qBAAjC,CACA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CACA,OAASC,MAAT,CAAiBC,aAAjB,KAAsC,oBAAtC,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,C,4HAGA,QAASC,CAAAA,iBAAT,CAA2BC,KAA3B,CAAkC,CAChCT,SAAS,CAAC,UAAM,CACd,GAAMU,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACA,GAAMC,CAAAA,GAAG,CAAGF,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ,CAEA,GAAIF,KAAK,EAAI,CAACG,GAAD,EAAQC,IAAI,CAACC,GAAL,EAArB,CAAiC,CAC/B,MAAOX,CAAAA,OAAO,CAACY,IAAR,CAAaV,aAAb,CAAP,CACD,CACF,CAPQ,CAON,EAPM,CAAT,CASA,GAAMW,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GACER,KAAK,CAACS,WAAN,EACAT,KAAK,CAACS,WAAN,CAAkBC,KAAlB,GAA4BhB,gBAAgB,CAACiB,SAF/C,CAGE,CACAX,KAAK,CAACP,0BAAN,GACD,CACF,CAPD,CASA,GAAIO,KAAK,CAACS,WAAV,CAAuB,CACrB,mBACE,YAAK,SAAS,CAAC,cAAf,uBACE,aAAK,SAAS,CAAC,uBAAf,wBACE,gBAAS,SAAS,CAAC,eAAnB,uBACE,YAAK,GAAG,CAAEX,IAAV,CAAgB,GAAG,CAAC,eAApB,EADF,EADF,cAIE,WAAI,SAAS,CAAC,uBAAd,8CAJF,cAOE,WAAG,SAAS,CAAC,oBAAb,qFAEK,GAFL,cAGE,mEAC6B,aAD7B,GAHF,+EAPF,cAgBE,UAAG,SAAS,CAAC,8BAAb,mCAhBF,cAiBE,eAAQ,OAAO,CAAEU,WAAjB,CAA8B,SAAS,CAAC,yBAAxC,UACGR,KAAK,CAACS,WAAN,CAAkBC,KAAlB,GAA4BhB,gBAAgB,CAACkB,YAA7C,cACC,YACE,SAAS,CAAC,mBADZ,CAEE,GAAG,CAAEC,OAFP,CAGE,GAAG,CAAC,kBAHN,EADD,CAOC,cARJ,EAjBF,GADF,EADF,CAiCD,CAlCD,IAkCO,CACLlB,OAAO,CAACY,IAAR,CAAaX,MAAb,EACA,MAAO,EAAP,CACD,CACF,CAED,GAAMkB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAqB,IAAlBL,CAAAA,WAAkB,MAAlBA,WAAkB,CAC3C,MAAO,CAAEA,WAAW,CAAXA,WAAF,CAAP,CACD,CAFD,CAIA,cAAejB,CAAAA,OAAO,CAACsB,eAAD,CAAkB,CAAErB,0BAA0B,CAA1BA,0BAAF,CAAlB,CAAP,CACbM,iBADa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { resendAccountActivateEmail } from \"../../actions\";\r\nimport { newUserDataState } from \"../../actions/types\";\r\nimport history from \"../../utils/history\";\r\nimport { signup, conversations } from \"../../utils/Routes\";\r\nimport logo from \"../logo.png\";\r\nimport spinner from \"../spinner.svg\";\r\n\r\nfunction EmailConfirmation(props) {\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const exp = localStorage.getItem(\"exp\");\r\n\r\n    if (token && +exp >= Date.now()) {\r\n      return history.push(conversations);\r\n    }\r\n  }, []);\r\n\r\n  const resendEmail = () => {\r\n    if (\r\n      props.newUserData &&\r\n      props.newUserData.state === newUserDataState.submitted\r\n    ) {\r\n      props.resendAccountActivateEmail();\r\n    }\r\n  };\r\n\r\n  if (props.newUserData) {\r\n    return (\r\n      <div className=\"confirmation\">\r\n        <div className=\"confirmation__wrapper\">\r\n          <picture className=\"chat-app-logo\">\r\n            <img src={logo} alt=\"chat app logo\" />\r\n          </picture>\r\n          <h1 className=\"confirmation__heading\">\r\n            Please confirm you email address\r\n          </h1>\r\n          <p className=\"confirmation__desc\">\r\n            An email has been sent to your mail account. Please check your email\r\n            to{\" \"}\r\n            <span>\r\n              activate chat app account. <br />\r\n            </span>\r\n            If you don't see any email in inbox, check promotions tab or spam\r\n            folder.\r\n          </p>\r\n          <p className=\"confirmation__resendEmailQue\">Didn't get any email?</p>\r\n          <button onClick={resendEmail} className=\"confirmation__resendBtn\">\r\n            {props.newUserData.state === newUserDataState.resubmitting ? (\r\n              <img\r\n                className=\"icon-spinner-dark\"\r\n                src={spinner}\r\n                alt=\"spinner icon svg\"\r\n              />\r\n            ) : (\r\n              \"Resend email\"\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    history.push(signup);\r\n    return \"\";\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ newUserData }) => {\r\n  return { newUserData };\r\n};\r\n\r\nexport default connect(mapStateToProps, { resendAccountActivateEmail })(\r\n  EmailConfirmation\r\n);\r\n"]},"metadata":{},"sourceType":"module"}