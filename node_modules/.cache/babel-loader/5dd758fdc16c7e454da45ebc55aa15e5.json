{"ast":null,"code":"import _createForOfIteratorHelper from\"C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{connect}from\"react-redux\";import Pusher from\"pusher-js\";import ProfileBar from\"../ProfileBar\";import{setMessageData,sendMessage,userInserted,userUpdated,userDeleted,conversationInserted,conversationDeleted,messageInserted,addEmoji}from\"../../actions\";import keys from\"../../config\";import ConversationCard from\"./ConversationCard\";import Message from\"./Message\";import EMOJIS from\"../../utils/emojis\";import defaultAvatar from\"../avatar.svg\";import sendMessageIcon from\"../send.svg\";import spinner from\"../spinner.svg\";import\"./Conversations.scss\";import{login}from\"../../utils/Routes\";import history from\"../../utils/history\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Conversations=/*#__PURE__*/function(_Component){_inherits(Conversations,_Component);var _super=_createSuper(Conversations);function Conversations(){var _this;_classCallCheck(this,Conversations);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={activeTab:\"people\",messageContainerClass:\"message-container\",isEmojiActive:false,isMsgFormActive:false};_this.messageContainer=/*#__PURE__*/React.createRef();_this.setMessageContainerClass=function(isActive){_this.setState({messageContainerClass:isActive?\"message-container message-container-active\":\"message-container\"});};_this.setActiveTab=function(tab){_this.setState({activeTab:tab});};_this.isTabActive=function(tab){if(_this.state.activeTab===tab)return\"tabs active\";return\"tabs\";};_this.userAvatar=function(user){var _user$avatar;var image=user===null||user===void 0?void 0:(_user$avatar=user.avatar)===null||_user$avatar===void 0?void 0:_user$avatar.data;if(image){image=_this.bufferToBase64(image);return\"data:image/jpeg;base64,\".concat(image);}return null;};_this.renderUsers=function(){return _this.props.users.map(function(user){if(!_this.props.auth.user||!user)return null;if(user._id===_this.props.auth.user._id){return null;}var conversation;var _iterator=_createForOfIteratorHelper(_this.props.conversations.data),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var con=_step.value;if(user._id===con.user1||user._id===con.user2){conversation=con;break;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return/*#__PURE__*/_jsx(ConversationCard,{conversation:conversation,username:user.username,id:user._id,setMessageContainerClass:_this.setMessageContainerClass,avatar:user.avatar,isOnline:user.isUserActive,userAvatar:_this.userAvatar(user)||defaultAvatar},user._id);});};_this.getUser=function(conversation){var otherID;if(_this.props.auth.user._id===conversation.user1){otherID=conversation.user2;}else{otherID=conversation.user1;}return _this.getUserWithId(otherID);};_this.getUserWithId=function(id){var _iterator2=_createForOfIteratorHelper(_this.props.users),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var user=_step2.value;if(user._id===id){return user;}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}};_this.renderConversations=function(){var conversations=_this.props.conversations.data.map(function(conversation){var user=_this.getUser(conversation);return/*#__PURE__*/_jsx(ConversationCard,{conversation:conversation,setMessageContainerClass:_this.setMessageContainerClass,username:user.username,userID:user._id,avatar:user.avatar,isOnline:user.isUserActive,userAvatar:_this.userAvatar(user)||defaultAvatar,lastMsgUser:conversation.messages.length?conversation.messages[conversation.messages.length-1].user:null,lastMsg:conversation.messages[conversation.messages.length-1]&&conversation.messages[conversation.messages.length-1].message||\"You and \".concat(user.username,\" are connected and can start chatting...\")},user._id);});return conversations;};_this.renderMessages=function(){return _this.props.activeConversation.messages.map(function(message){if(_this.props.auth.user._id===message.user){return/*#__PURE__*/_jsx(Message,{msg:message.message,className:\"my-message\",title:\"\".concat(new Date(message.createdAt).toGMTString())},message._id);}return/*#__PURE__*/_jsx(Message,{msg:message.message,className:\"others-message\",title:new Date(message.createdAt).toDateString()+\", \"+new Date(message.createdAt).toLocaleTimeString()},message._id);});};_this.renderEmojis=function(){return EMOJIS.split(\"\").map(function(emoji,index){return/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){_this.props.addEmoji(index);},children:emoji},index);});};_this.onMessageSubmit=function(event){if(event.preventDefault)event.preventDefault();if(!_this.props.message.message.trim()||_this.props.message.state!==\"submitting\"){_this.props.sendMessage();}};return _this;}_createClass(Conversations,[{key:\"bufferToBase64\",value:function bufferToBase64(buffer){var binary=\"\";var bytes=new Uint8Array(buffer);var len=bytes.byteLength;for(var i=0;i<len;i++){binary+=String.fromCharCode(bytes[i]);}return window.btoa(binary);}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var token=localStorage.getItem(\"token\");var exp=localStorage.getItem(\"exp\");if(!token||+exp<Date.now()){history.push(login);}var pusher=new Pusher(keys.PUSHER_KEY,{cluster:keys.PUSHER_CLUSTER});this.userChannel=pusher.subscribe(\"users\");this.conversationChannel=pusher.subscribe(\"conversations\");this.messageChannel=pusher.subscribe(\"messages\");this.userChannel.bind(\"inserted\",function(data){_this2.props.userInserted(data);});this.userChannel.bind(\"updated\",function(data){_this2.props.userUpdated(data);});this.userChannel.bind(\"deleted\",function(data){_this2.props.userDeleted(data._id);});this.conversationChannel.bind(\"inserted\",function(data){_this2.props.conversationInserted(data);});this.conversationChannel.bind(\"deleted\",function(data){_this2.props.conversationDeleted(data);});this.messageChannel.bind(\"inserted\",function(data){_this2.props.messageInserted(data);});window.onbeforeunload=function(){_this2.userChannel.unsubscribe();_this2.conversationChannel.unsubscribe();_this2.messageChannel.unsubscribe();};}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){if(this.messageContainer.current){var scroll=this.messageContainer.current.scrollHeight;this.messageContainer.current.scrollTop=scroll;}}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/_jsxs(\"div\",{className:\"conversations\",children:[/*#__PURE__*/_jsx(ProfileBar,{}),/*#__PURE__*/_jsxs(\"aside\",{className:\"conversation-bar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"conversation-tab\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){return _this3.setActiveTab(\"people\");},className:this.isTabActive(\"people\"),children:/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-people-fill\"})}),/*#__PURE__*/_jsxs(\"span\",{onClick:function onClick(){return _this3.setActiveTab(\"messages\");},className:this.isTabActive(\"messages\"),children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-chat-dots-fill\"}),this.props.conversations.notifications?/*#__PURE__*/_jsx(\"span\",{className:\"msg-notification\",children:this.props.conversations.notifications}):null]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"conversation-users\",children:[!this.props.conversations.data.length&&this.state.activeTab===\"messages\"?/*#__PURE__*/_jsx(\"p\",{className:\"conversation-users-o\",children:\"You haven't started conversation with anyone\"}):null,this.state.activeTab===\"people\"?this.renderUsers():this.renderConversations()]})]}),/*#__PURE__*/_jsx(\"section\",{className:this.state.messageContainerClass,children:!this.props.activeConversation?/*#__PURE__*/_jsxs(\"div\",{className:\"start-chatting-message\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Send messages to your friends.\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Search for other users \",/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-people-fill\"})]}),/*#__PURE__*/_jsx(\"p\",{children:\"Start chatting\"})]}):this.props.activeConversation.state===\"creating\"?/*#__PURE__*/_jsxs(\"div\",{className:\"start-chatting-message\",children:[\"Creating conversation with\",\" \",this.getUserWithId(this.props.activeConversation.id).username,\" \",/*#__PURE__*/_jsx(\"picture\",{children:/*#__PURE__*/_jsx(\"img\",{className:\"icon-spinner\",src:spinner,alt:\"spinner icon svg\"})})]}):this.props.activeConversation.state!==\"failed\"?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"header\",{className:\"message-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"message-header-user\",children:[/*#__PURE__*/_jsx(\"i\",{onClick:function onClick(){return _this3.setMessageContainerClass(false);},className:\"bi bi-arrow-left-short\"}),/*#__PURE__*/_jsx(\"picture\",{className:\"message-header-user-avatar\",children:/*#__PURE__*/_jsx(\"img\",{className:\"default-avatar\",src:this.userAvatar(this.getUser(this.props.activeConversation))||defaultAvatar,alt:\"default avatar\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"message-header-user-text\",children:/*#__PURE__*/_jsx(\"h5\",{className:\"message-header-user-name\",children:this.getUser(this.props.activeConversation).username})})]})}),/*#__PURE__*/_jsxs(\"main\",{ref:this.messageContainer,className:\"message-messages\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"message-messages-started\",children:[\"You and \",this.getUser(this.props.activeConversation).username,\" \",\"are connected and can start chatting... \",/*#__PURE__*/_jsx(\"br\",{}),\"\".concat(new Date(this.props.activeConversation.createdAt).toDateString())]}),this.renderMessages()]}),/*#__PURE__*/_jsxs(\"footer\",{className:this.state.isMsgFormActive?\"message-messageForm message-messageForm-active\":\"message-messageForm\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.onMessageSubmit,className:\"message-messageForm-field\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type message...\",required:true,value:this.props.message.message,onChange:function onChange(event){return _this3.props.setMessageData(event.target.value,\"typing\");},onFocus:function onFocus(){return _this3.setState({isMsgFormActive:true});},onBlur:function onBlur(){return _this3.setState({isMsgFormActive:false});}}),/*#__PURE__*/_jsx(\"i\",{onClick:function onClick(){return _this3.setState({isEmojiActive:!_this3.state.isEmojiActive});},className:\"bi bi-emoji-laughing-fill\"}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"\",style:{display:\"none\"}}),this.state.isEmojiActive?/*#__PURE__*/_jsx(\"div\",{className:\"emoji-container\",children:this.renderEmojis()}):null]}),/*#__PURE__*/_jsx(\"img\",{className:this.props.message.state===\"submitting\"?\"icon-spinner-dark\":\"message-messageForm-sendBtn\",src:this.props.message.state===\"submitting\"?spinner:sendMessageIcon,alt:\"send message icon svg\",onClick:this.onMessageSubmit})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"start-chatting-message\",children:\"Something went wrong ! try reloading this page\"})}),this.props.appDataLoading!==\"loaded\"?/*#__PURE__*/_jsx(\"div\",{className:\"app-data-loading\",children:this.props.appDataLoading===\"failed\"?/*#__PURE__*/_jsx(\"p\",{children:\"Something went wrong ! Try reloading this page\"}):/*#__PURE__*/_jsx(\"img\",{className:\"icon-spinner\",src:spinner,alt:\"spinner icon svg\"})}):null]});}}]);return Conversations;}(Component);var mapStateToProps=function mapStateToProps(_ref){var auth=_ref.auth,users=_ref.users,conversations=_ref.conversations,activeConversation=_ref.activeConversation,message=_ref.message,appDataLoading=_ref.appDataLoading;return{auth:auth,users:users,conversations:conversations,activeConversation:activeConversation,message:message,appDataLoading:appDataLoading};};export default connect(mapStateToProps,{setMessageData:setMessageData,sendMessage:sendMessage,userInserted:userInserted,userUpdated:userUpdated,userDeleted:userDeleted,conversationInserted:conversationInserted,conversationDeleted:conversationDeleted,messageInserted:messageInserted,addEmoji:addEmoji})(Conversations);","map":{"version":3,"sources":["C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/src/components/Conversations/index.jsx"],"names":["React","Component","connect","Pusher","ProfileBar","setMessageData","sendMessage","userInserted","userUpdated","userDeleted","conversationInserted","conversationDeleted","messageInserted","addEmoji","keys","ConversationCard","Message","EMOJIS","login","history","Conversations","state","activeTab","messageContainerClass","isEmojiActive","isMsgFormActive","messageContainer","createRef","setMessageContainerClass","isActive","setState","setActiveTab","tab","isTabActive","userAvatar","user","image","avatar","data","bufferToBase64","renderUsers","props","users","map","auth","_id","conversation","conversations","con","user1","user2","username","isUserActive","defaultAvatar","getUser","otherID","getUserWithId","id","renderConversations","messages","length","message","renderMessages","activeConversation","Date","createdAt","toGMTString","toDateString","toLocaleTimeString","renderEmojis","split","emoji","index","onMessageSubmit","event","preventDefault","trim","buffer","binary","bytes","Uint8Array","len","byteLength","i","String","fromCharCode","window","btoa","token","localStorage","getItem","exp","now","push","pusher","PUSHER_KEY","cluster","PUSHER_CLUSTER","userChannel","subscribe","conversationChannel","messageChannel","bind","onbeforeunload","unsubscribe","current","scroll","scrollHeight","scrollTop","notifications","spinner","target","value","display","sendMessageIcon","appDataLoading","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Pusher from \"pusher-js\";\r\n\r\nimport ProfileBar from \"../ProfileBar\";\r\nimport {\r\n  setMessageData,\r\n  sendMessage,\r\n  userInserted,\r\n  userUpdated,\r\n  userDeleted,\r\n  conversationInserted,\r\n  conversationDeleted,\r\n  messageInserted,\r\n  addEmoji,\r\n} from \"../../actions\";\r\nimport keys from \"../../config\";\r\nimport ConversationCard from \"./ConversationCard\";\r\nimport Message from \"./Message\";\r\nimport EMOJIS from \"../../utils/emojis\";\r\nimport defaultAvatar from \"../avatar.svg\";\r\nimport sendMessageIcon from \"../send.svg\";\r\nimport spinner from \"../spinner.svg\";\r\nimport \"./Conversations.scss\";\r\nimport { login } from \"../../utils/Routes\";\r\nimport history from \"../../utils/history\";\r\n\r\nclass Conversations extends Component {\r\n  state = {\r\n    activeTab: \"people\",\r\n    messageContainerClass: \"message-container\",\r\n    isEmojiActive: false,\r\n    isMsgFormActive: false,\r\n  };\r\n\r\n  messageContainer = React.createRef();\r\n\r\n  setMessageContainerClass = (isActive) => {\r\n    this.setState({\r\n      messageContainerClass: isActive\r\n        ? \"message-container message-container-active\"\r\n        : \"message-container\",\r\n    });\r\n  };\r\n\r\n  setActiveTab = (tab) => {\r\n    this.setState({ activeTab: tab });\r\n  };\r\n\r\n  isTabActive = (tab) => {\r\n    if (this.state.activeTab === tab) return \"tabs active\";\r\n    return \"tabs\";\r\n  };\r\n\r\n  bufferToBase64(buffer) {\r\n    let binary = \"\";\r\n    let bytes = new Uint8Array(buffer);\r\n    let len = bytes.byteLength;\r\n    for (let i = 0; i < len; i++) {\r\n      binary += String.fromCharCode(bytes[i]);\r\n    }\r\n    return window.btoa(binary);\r\n  }\r\n\r\n  userAvatar = (user) => {\r\n    let image = user?.avatar?.data;\r\n    if (image) {\r\n      image = this.bufferToBase64(image);\r\n      return `data:image/jpeg;base64,${image}`;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  renderUsers = () => {\r\n    return this.props.users.map((user) => {\r\n      if (!this.props.auth.user || !user) return null;\r\n      if (user._id === this.props.auth.user._id) {\r\n        return null;\r\n      }\r\n\r\n      let conversation;\r\n      for (let con of this.props.conversations.data) {\r\n        if (user._id === con.user1 || user._id === con.user2) {\r\n          conversation = con;\r\n          break;\r\n        }\r\n      }\r\n\r\n      return (\r\n        <ConversationCard\r\n          conversation={conversation}\r\n          key={user._id}\r\n          username={user.username}\r\n          id={user._id}\r\n          setMessageContainerClass={this.setMessageContainerClass}\r\n          avatar={user.avatar}\r\n          isOnline={user.isUserActive}\r\n          userAvatar={this.userAvatar(user) || defaultAvatar}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  getUser = (conversation) => {\r\n    let otherID;\r\n    if (this.props.auth.user._id === conversation.user1) {\r\n      otherID = conversation.user2;\r\n    } else {\r\n      otherID = conversation.user1;\r\n    }\r\n\r\n    return this.getUserWithId(otherID);\r\n  };\r\n\r\n  getUserWithId = (id) => {\r\n    for (let user of this.props.users) {\r\n      if (user._id === id) {\r\n        return user;\r\n      }\r\n    }\r\n  };\r\n\r\n  renderConversations = () => {\r\n    const conversations = this.props.conversations.data.map((conversation) => {\r\n      const user = this.getUser(conversation);\r\n\r\n      return (\r\n        <ConversationCard\r\n          conversation={conversation}\r\n          setMessageContainerClass={this.setMessageContainerClass}\r\n          key={user._id}\r\n          username={user.username}\r\n          userID={user._id}\r\n          avatar={user.avatar}\r\n          isOnline={user.isUserActive}\r\n          userAvatar={this.userAvatar(user) || defaultAvatar}\r\n          lastMsgUser={\r\n            conversation.messages.length\r\n              ? conversation.messages[conversation.messages.length - 1].user\r\n              : null\r\n          }\r\n          lastMsg={\r\n            (conversation.messages[conversation.messages.length - 1] &&\r\n              conversation.messages[conversation.messages.length - 1]\r\n                .message) ||\r\n            `You and ${user.username} are connected and can start chatting...`\r\n          }\r\n        />\r\n      );\r\n    });\r\n\r\n    return conversations;\r\n  };\r\n\r\n  renderMessages = () => {\r\n    return this.props.activeConversation.messages.map((message) => {\r\n      if (this.props.auth.user._id === message.user) {\r\n        return (\r\n          <Message\r\n            key={message._id}\r\n            msg={message.message}\r\n            className=\"my-message\"\r\n            title={`${new Date(message.createdAt).toGMTString()}`}\r\n          />\r\n        );\r\n      }\r\n      return (\r\n        <Message\r\n          key={message._id}\r\n          msg={message.message}\r\n          className=\"others-message\"\r\n          title={\r\n            new Date(message.createdAt).toDateString() +\r\n            \", \" +\r\n            new Date(message.createdAt).toLocaleTimeString()\r\n          }\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  renderEmojis = () =>\r\n    EMOJIS.split(\"\").map((emoji, index) => (\r\n      <span\r\n        onClick={() => {\r\n          this.props.addEmoji(index);\r\n        }}\r\n        key={index}\r\n      >\r\n        {emoji}\r\n      </span>\r\n    ));\r\n\r\n  onMessageSubmit = (event) => {\r\n    if (event.preventDefault) event.preventDefault();\r\n\r\n    if (\r\n      !this.props.message.message.trim() ||\r\n      this.props.message.state !== \"submitting\"\r\n    ) {\r\n      this.props.sendMessage();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem(\"token\");\r\n    const exp = localStorage.getItem(\"exp\");\r\n\r\n    if (!token || +exp < Date.now()) {\r\n      history.push(login);\r\n    }\r\n\r\n    const pusher = new Pusher(keys.PUSHER_KEY, {\r\n      cluster: keys.PUSHER_CLUSTER,\r\n    });\r\n\r\n    this.userChannel = pusher.subscribe(\"users\");\r\n    this.conversationChannel = pusher.subscribe(\"conversations\");\r\n    this.messageChannel = pusher.subscribe(\"messages\");\r\n\r\n    this.userChannel.bind(\"inserted\", (data) => {\r\n      this.props.userInserted(data);\r\n    });\r\n\r\n    this.userChannel.bind(\"updated\", (data) => {\r\n      this.props.userUpdated(data);\r\n    });\r\n\r\n    this.userChannel.bind(\"deleted\", (data) => {\r\n      this.props.userDeleted(data._id);\r\n    });\r\n\r\n    this.conversationChannel.bind(\"inserted\", (data) => {\r\n      this.props.conversationInserted(data);\r\n    });\r\n\r\n    this.conversationChannel.bind(\"deleted\", (data) => {\r\n      this.props.conversationDeleted(data);\r\n    });\r\n\r\n    this.messageChannel.bind(\"inserted\", (data) => {\r\n      this.props.messageInserted(data);\r\n    });\r\n\r\n    window.onbeforeunload = () => {\r\n      this.userChannel.unsubscribe();\r\n      this.conversationChannel.unsubscribe();\r\n      this.messageChannel.unsubscribe();\r\n    };\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.messageContainer.current) {\r\n      let scroll = this.messageContainer.current.scrollHeight;\r\n      this.messageContainer.current.scrollTop = scroll;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"conversations\">\r\n        <ProfileBar />\r\n        <aside className=\"conversation-bar\">\r\n          <div className=\"conversation-tab\">\r\n            <span\r\n              onClick={() => this.setActiveTab(\"people\")}\r\n              className={this.isTabActive(\"people\")}\r\n            >\r\n              <i className=\"bi bi-people-fill\"></i>\r\n            </span>\r\n            <span\r\n              onClick={() => this.setActiveTab(\"messages\")}\r\n              className={this.isTabActive(\"messages\")}\r\n            >\r\n              <i className=\"bi bi-chat-dots-fill\"></i>\r\n              {this.props.conversations.notifications ? (\r\n                <span className=\"msg-notification\">\r\n                  {this.props.conversations.notifications}\r\n                </span>\r\n              ) : null}\r\n            </span>\r\n          </div>\r\n          <div className=\"conversation-users\">\r\n            {!this.props.conversations.data.length &&\r\n            this.state.activeTab === \"messages\" ? (\r\n              <p className=\"conversation-users-o\">\r\n                You haven't started conversation with anyone\r\n              </p>\r\n            ) : null}\r\n\r\n            {this.state.activeTab === \"people\"\r\n              ? this.renderUsers()\r\n              : this.renderConversations()}\r\n          </div>\r\n        </aside>\r\n        <section className={this.state.messageContainerClass}>\r\n          {!this.props.activeConversation ? (\r\n            <div className=\"start-chatting-message\">\r\n              <p>Send messages to your friends.</p>\r\n              <p>\r\n                Search for other users <i className=\"bi bi-people-fill\"></i>\r\n              </p>\r\n              <p>Start chatting</p>\r\n            </div>\r\n          ) : this.props.activeConversation.state === \"creating\" ? (\r\n            <div className=\"start-chatting-message\">\r\n              Creating conversation with{\" \"}\r\n              {this.getUserWithId(this.props.activeConversation.id).username}{\" \"}\r\n              <picture>\r\n                <img\r\n                  className=\"icon-spinner\"\r\n                  src={spinner}\r\n                  alt=\"spinner icon svg\"\r\n                />\r\n              </picture>\r\n            </div>\r\n          ) : this.props.activeConversation.state !== \"failed\" ? (\r\n            <>\r\n              <header className=\"message-header\">\r\n                <div className=\"message-header-user\">\r\n                  <i\r\n                    onClick={() => this.setMessageContainerClass(false)}\r\n                    className=\"bi bi-arrow-left-short\"\r\n                  ></i>\r\n                  <picture className=\"message-header-user-avatar\">\r\n                    <img\r\n                      className=\"default-avatar\"\r\n                      src={\r\n                        this.userAvatar(\r\n                          this.getUser(this.props.activeConversation)\r\n                        ) || defaultAvatar\r\n                      }\r\n                      alt=\"default avatar\"\r\n                    />\r\n                  </picture>\r\n                  <div className=\"message-header-user-text\">\r\n                    <h5 className=\"message-header-user-name\">\r\n                      {this.getUser(this.props.activeConversation).username}\r\n                    </h5>\r\n                  </div>\r\n                </div>\r\n              </header>\r\n              <main ref={this.messageContainer} className=\"message-messages\">\r\n                <p className=\"message-messages-started\">\r\n                  You and {this.getUser(this.props.activeConversation).username}{\" \"}\r\n                  are connected and can start chatting... <br />\r\n                  {`${new Date(\r\n                    this.props.activeConversation.createdAt\r\n                  ).toDateString()}`}\r\n                </p>\r\n                {this.renderMessages()}\r\n              </main>\r\n              <footer\r\n                className={\r\n                  this.state.isMsgFormActive\r\n                    ? \"message-messageForm message-messageForm-active\"\r\n                    : \"message-messageForm\"\r\n                }\r\n              >\r\n                <form\r\n                  onSubmit={this.onMessageSubmit}\r\n                  className=\"message-messageForm-field\"\r\n                >\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type message...\"\r\n                    required\r\n                    value={this.props.message.message}\r\n                    onChange={(event) =>\r\n                      this.props.setMessageData(event.target.value, \"typing\")\r\n                    }\r\n                    onFocus={() => this.setState({ isMsgFormActive: true })}\r\n                    onBlur={() => this.setState({ isMsgFormActive: false })}\r\n                  />\r\n\r\n                  <i\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        isEmojiActive: !this.state.isEmojiActive,\r\n                      })\r\n                    }\r\n                    className=\"bi bi-emoji-laughing-fill\"\r\n                  ></i>\r\n\r\n                  <input type=\"submit\" value=\"\" style={{ display: \"none\" }} />\r\n\r\n                  {this.state.isEmojiActive ? (\r\n                    <div className=\"emoji-container\">{this.renderEmojis()}</div>\r\n                  ) : null}\r\n                </form>\r\n                <img\r\n                  className={\r\n                    this.props.message.state === \"submitting\"\r\n                      ? \"icon-spinner-dark\"\r\n                      : \"message-messageForm-sendBtn\"\r\n                  }\r\n                  src={\r\n                    this.props.message.state === \"submitting\"\r\n                      ? spinner\r\n                      : sendMessageIcon\r\n                  }\r\n                  alt=\"send message icon svg\"\r\n                  onClick={this.onMessageSubmit}\r\n                />\r\n              </footer>\r\n            </>\r\n          ) : (\r\n            <div className=\"start-chatting-message\">\r\n              Something went wrong ! try reloading this page\r\n            </div>\r\n          )}\r\n        </section>\r\n        {this.props.appDataLoading !== \"loaded\" ? (\r\n          <div className=\"app-data-loading\">\r\n            {this.props.appDataLoading === \"failed\" ? (\r\n              <p>Something went wrong ! Try reloading this page</p>\r\n            ) : (\r\n              <img\r\n                className=\"icon-spinner\"\r\n                src={spinner}\r\n                alt=\"spinner icon svg\"\r\n              />\r\n            )}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  auth,\r\n  users,\r\n  conversations,\r\n  activeConversation,\r\n  message,\r\n  appDataLoading,\r\n}) => {\r\n  return {\r\n    auth,\r\n    users,\r\n    conversations,\r\n    activeConversation,\r\n    message,\r\n    appDataLoading,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setMessageData,\r\n  sendMessage,\r\n  userInserted,\r\n  userUpdated,\r\n  userDeleted,\r\n  conversationInserted,\r\n  conversationDeleted,\r\n  messageInserted,\r\n  addEmoji,\r\n})(Conversations);\r\n"]},"metadata":{},"sourceType":"module"}