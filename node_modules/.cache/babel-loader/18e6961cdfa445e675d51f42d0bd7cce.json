{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ghassen\\\\Desktop\\\\lyoum\\\\3\\\\chat-app-client\\\\src\\\\components\\\\AuthComponent\\\\ActivateAccount.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { activateAccount, setNewUserData, resendAccountActivateEmail } from \"../../actions\";\nimport { newUserDataState } from \"../../actions/types\";\nimport spinner from \"../spinner.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ActivateAccount extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.props.resendAccountActivateEmail();\n    };\n  }\n\n  componentDidMount() {\n    this.props.setNewUserData(true, \"\", \"\", \"\", \"\", newUserDataState.activatingAccount);\n    this.props.activateAccount(this.props.match.params.token);\n  }\n\n  render() {\n    if (!this.props.newUserData) return \"\";\n\n    if (this.props.newUserData.state === newUserDataState.activatingAccount || this.props.newUserData.state === \"accountActivated\") {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"icon-spinner-activateAccount\",\n        src: spinner,\n        alt: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this);\n    } else {\n      let failedMessage;\n      let failed;\n\n      if (this.props.newUserData.state.startsWith(\"Invalid\")) {\n        failedMessage = this.props.newUserData.state;\n        failed = true;\n      } else if (this.props.newUserData.state.startsWith(\"failed\")) {\n        failedMessage = this.props.newUserData.state.split(\",\")[1];\n        failed = true;\n      } else {\n        failed = false;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-warning\",\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            show: failed,\n            variant: \"danger\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: failedMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"form__heading\",\n          children: \"Account Activation Failed !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"form__forgotPasswordDesc\",\n          children: \"Token was invalid or expired. Enter email to get email with activation link again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__fieldsWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: this.props.newUserData.email,\n            required: true,\n            autoFocus: true,\n            onChange: event => this.props.setNewUserData(true, \"\", event.target.value, \"\", \"\", newUserDataState.typing)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"form__submitBtn\",\n          children: this.props.newUserData.state === newUserDataState.resubmitting ? /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"icon-spinner\",\n            src: spinner,\n            alt: \"spinner icon svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this) : \"Resend email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    newUserData: state.newUserData\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  activateAccount,\n  setNewUserData,\n  resendAccountActivateEmail\n})(ActivateAccount));","map":{"version":3,"sources":["C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/src/components/AuthComponent/ActivateAccount.jsx"],"names":["React","connect","withRouter","Alert","activateAccount","setNewUserData","resendAccountActivateEmail","newUserDataState","ActivateAccount","Component","onSubmit","event","preventDefault","props","componentDidMount","activatingAccount","match","params","token","render","newUserData","state","spinner","failedMessage","failed","startsWith","split","email","target","value","typing","resubmitting","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport {\r\n  activateAccount,\r\n  setNewUserData,\r\n  resendAccountActivateEmail,\r\n} from \"../../actions\";\r\nimport { newUserDataState } from \"../../actions/types\";\r\nimport spinner from \"../spinner.svg\";\r\n\r\nclass ActivateAccount extends React.Component {\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.resendAccountActivateEmail();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.setNewUserData(\r\n      true,\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      newUserDataState.activatingAccount\r\n    );\r\n    this.props.activateAccount(this.props.match.params.token);\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.newUserData) return \"\";\r\n\r\n    if (\r\n      this.props.newUserData.state === newUserDataState.activatingAccount ||\r\n      this.props.newUserData.state === \"accountActivated\"\r\n    ) {\r\n      return (\r\n        <img\r\n          className=\"icon-spinner-activateAccount\"\r\n          src={spinner}\r\n          alt=\"spinner\"\r\n        />\r\n      );\r\n    } else {\r\n      let failedMessage;\r\n      let failed;\r\n      if (this.props.newUserData.state.startsWith(\"Invalid\")) {\r\n        failedMessage = this.props.newUserData.state;\r\n        failed = true;\r\n      } else if (this.props.newUserData.state.startsWith(\"failed\")) {\r\n        failedMessage = this.props.newUserData.state.split(\",\")[1];\r\n        failed = true;\r\n      } else {\r\n        failed = false;\r\n      }\r\n\r\n      return (\r\n        <form className=\"form\" onSubmit={this.onSubmit}>\r\n          <div className=\"signup-warning\">\r\n            <Alert show={failed} variant=\"danger\">\r\n              <p>{failedMessage}</p>\r\n            </Alert>\r\n          </div>\r\n          <h2 className=\"form__heading\">Account Activation Failed !</h2>\r\n\r\n          <p className=\"form__forgotPasswordDesc\">\r\n            Token was invalid or expired. Enter email to get email with\r\n            activation link again.\r\n          </p>\r\n\r\n          <div className=\"form__fieldsWrapper\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={this.props.newUserData.email}\r\n              required\r\n              autoFocus\r\n              onChange={(event) =>\r\n                this.props.setNewUserData(\r\n                  true,\r\n                  \"\",\r\n                  event.target.value,\r\n                  \"\",\r\n                  \"\",\r\n                  newUserDataState.typing\r\n                )\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"form__submitBtn\">\r\n            {this.props.newUserData.state === newUserDataState.resubmitting ? (\r\n              <img\r\n                className=\"icon-spinner\"\r\n                src={spinner}\r\n                alt=\"spinner icon svg\"\r\n              />\r\n            ) : (\r\n              \"Resend email\"\r\n            )}\r\n          </button>\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { newUserData: state.newUserData };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    activateAccount,\r\n    setNewUserData,\r\n    resendAccountActivateEmail,\r\n  })(ActivateAccount)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}