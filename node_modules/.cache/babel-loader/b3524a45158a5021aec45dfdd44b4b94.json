{"ast":null,"code":"import axios from \"../utils/axios\";\nimport { AUTH_USER, USERS, CONVERSATIONS, APP_DATA_LOADING, PROFILE_DATA } from \"./types\";\nimport history from \"../utils/history\";\nimport { login, changePassword, conversations, updateProfile } from \"../utils/Routes\";\nexport const saveToken = token => {\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\"exp\", Date.now() + 30 * 24 * 60 * 60 * 1000);\n};\nexport const loadDataHelper = async (dispatch, token, cons, users, user, me) => {\n  dispatch({\n    type: APP_DATA_LOADING,\n    payload: \"loading\"\n  });\n\n  try {\n    if (me) {\n      const me = await axios.get(\"/api/v1/users/me\", {\n        headers: {\n          authorization: `Bearer ${token}`\n        }\n      });\n      dispatch({\n        type: AUTH_USER,\n        payload: {\n          user: me.data.user\n        }\n      });\n      user = me.data.user;\n    }\n\n    dispatch({\n      type: PROFILE_DATA,\n      payload: {\n        username: user.username,\n        email: user.email\n      }\n    });\n\n    if (users) {\n      const users = await axios.get(\"/api/v1/users\", {\n        headers: {\n          authorization: `Bearer ${token}`\n        }\n      });\n      dispatch({\n        type: USERS,\n        payload: [...users.data.users]\n      });\n    }\n\n    if (cons) {\n      const conversations = await axios.get(\"/api/v1/conversations\", {\n        headers: {\n          authorization: `Bearer ${token}`\n        }\n      });\n      let count = 0;\n      conversations.data.conversations.forEach(con => {\n        const lastMsg = con.messages[con.messages.length - 1];\n\n        if (!lastMsg || lastMsg.user !== user._id) {\n          count++;\n        }\n      });\n      dispatch({\n        type: CONVERSATIONS,\n        payload: {\n          data: conversations.data.conversations,\n          notifications: count\n        }\n      });\n    }\n\n    dispatch({\n      type: APP_DATA_LOADING,\n      payload: \"loaded\"\n    });\n  } catch (err) {\n    dispatch({\n      type: APP_DATA_LOADING,\n      payload: \"failed\"\n    });\n    console.log(err);\n    const path = window.location.href.split(\"#\")[1];\n\n    switch (path) {\n      case conversations:\n      case updateProfile:\n      case changePassword:\n        history.push(login);\n        break;\n\n      default:\n        return;\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/src/actions/helper.js"],"names":["axios","AUTH_USER","USERS","CONVERSATIONS","APP_DATA_LOADING","PROFILE_DATA","history","login","changePassword","conversations","updateProfile","saveToken","token","localStorage","setItem","Date","now","loadDataHelper","dispatch","cons","users","user","me","type","payload","get","headers","authorization","data","username","email","count","forEach","con","lastMsg","messages","length","_id","notifications","err","console","log","path","window","location","href","split","push"],"mappings":"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","sourcesContent":["import axios from \"../utils/axios\";\r\nimport {\r\n  AUTH_USER,\r\n  USERS,\r\n  CONVERSATIONS,\r\n  APP_DATA_LOADING,\r\n  PROFILE_DATA,\r\n} from \"./types\";\r\nimport history from \"../utils/history\";\r\nimport {\r\n  login,\r\n  changePassword,\r\n  conversations,\r\n  updateProfile,\r\n} from \"../utils/Routes\";\r\n\r\nexport const saveToken = (token) => {\r\n  localStorage.setItem(\"token\", token);\r\n  localStorage.setItem(\"exp\", Date.now() + 30 * 24 * 60 * 60 * 1000);\r\n};\r\n\r\nexport const loadDataHelper = async (\r\n  dispatch,\r\n  token,\r\n  cons,\r\n  users,\r\n  user,\r\n  me\r\n) => {\r\n  dispatch({\r\n    type: APP_DATA_LOADING,\r\n    payload: \"loading\",\r\n  });\r\n\r\n  try {\r\n    if (me) {\r\n      const me = await axios.get(\"/api/v1/users/me\", {\r\n        headers: {\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      dispatch({\r\n        type: AUTH_USER,\r\n        payload: {\r\n          user: me.data.user,\r\n        },\r\n      });\r\n\r\n      user = me.data.user;\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_DATA,\r\n      payload: {\r\n        username: user.username,\r\n        email: user.email,\r\n      },\r\n    });\r\n\r\n    if (users) {\r\n      const users = await axios.get(\"/api/v1/users\", {\r\n        headers: {\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      dispatch({\r\n        type: USERS,\r\n        payload: [...users.data.users],\r\n      });\r\n    }\r\n\r\n    if (cons) {\r\n      const conversations = await axios.get(\"/api/v1/conversations\", {\r\n        headers: {\r\n          authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      let count = 0;\r\n      conversations.data.conversations.forEach((con) => {\r\n        const lastMsg = con.messages[con.messages.length - 1];\r\n\r\n        if (!lastMsg || lastMsg.user !== user._id) {\r\n          count++;\r\n        }\r\n      });\r\n\r\n      dispatch({\r\n        type: CONVERSATIONS,\r\n        payload: {\r\n          data: conversations.data.conversations,\r\n          notifications: count,\r\n        },\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: APP_DATA_LOADING,\r\n      payload: \"loaded\",\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: APP_DATA_LOADING,\r\n      payload: \"failed\",\r\n    });\r\n    console.log(err);\r\n\r\n    const path = window.location.href.split(\"#\")[1];\r\n    switch (path) {\r\n      case conversations:\r\n      case updateProfile:\r\n      case changePassword:\r\n        history.push(login);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}