{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ghassen\\\\Desktop\\\\lyoum\\\\3\\\\chat-app-client\\\\src\\\\components\\\\ChangePassword\\\\index.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setChangePasswordData, saveNewPassword } from \"../../actions\";\nimport ProfileBar from \"../ProfileBar\";\nimport Alert from \"react-bootstrap/Alert\";\nimport spinner from \"../spinner.svg\";\nimport { conversations, login } from \"../../utils/Routes\";\nimport history from \"../../utils/history\";\nimport \"./ChangePassword.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass index extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onFieldChange = (event, field) => {\n      const {\n        changePassword\n      } = this.props;\n\n      if (field === \"current\") {\n        this.props.setChangePasswordData(event.target.value, changePassword.newPassword, changePassword.confirmPassword);\n      } else if (field === \"new\") {\n        this.props.setChangePasswordData(changePassword.currentPassword, event.target.value, changePassword.confirmPassword);\n      } else if (field === \"confirm\") {\n        this.props.setChangePasswordData(changePassword.currentPassword, changePassword.newPassword, event.target.value);\n      }\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.props.saveNewPassword();\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n    const exp = localStorage.getItem(\"exp\");\n\n    if (!token || +exp < Date.now()) {\n      history.push(login);\n    }\n  }\n\n  render() {\n    var _this$props$changePas;\n\n    let show, variant, message;\n\n    if ((_this$props$changePas = this.props.changePassword.state) === null || _this$props$changePas === void 0 ? void 0 : _this$props$changePas.startsWith(\"validation\")) {\n      show = true;\n      variant = \"danger\";\n      message = this.props.changePassword.state.split(\",\")[1];\n    } else if (this.props.changePassword.state === \"saved\") {\n      show = true;\n      variant = \"success\";\n      message = \"Password changed successfully !\";\n    } else if (this.props.changePassword.state === \"failed\") {\n      show = true;\n      variant = \"danger\";\n      message = \"Something went wrong ! May be current password is wrong.\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(ProfileBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-mainWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container profile-formWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: conversations,\n            className: \"back-to-conversation\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-arrow-left-short\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Conversations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification\",\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              show: show,\n              variant: variant,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"profile-heading\",\n            children: \"Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.onSubmit,\n            className: \"changePassword-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Current Password\",\n              required: true,\n              value: this.props.changePassword.currentPassword,\n              onChange: event => {\n                this.onFieldChange(event, \"current\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"New Password\",\n              required: true,\n              value: this.props.changePassword.newPassword,\n              onChange: event => this.onFieldChange(event, \"new\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Confirm Password\",\n              required: true,\n              value: this.props.changePassword.confirmPassword,\n              onChange: event => this.onFieldChange(event, \"confirm\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"profile-submitBtn\",\n              children: this.props.changePassword.state === \"saving\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"icon-spinner\",\n                src: spinner,\n                alt: \"spinner icon svg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this) : \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  changePassword,\n  auth\n}) => {\n  return {\n    changePassword,\n    auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setChangePasswordData,\n  saveNewPassword\n})(index);","map":{"version":3,"sources":["C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/src/components/ChangePassword/index.jsx"],"names":["React","Component","Link","connect","setChangePasswordData","saveNewPassword","ProfileBar","Alert","conversations","login","history","index","onFieldChange","event","field","changePassword","props","target","value","newPassword","confirmPassword","currentPassword","onSubmit","preventDefault","componentDidMount","token","localStorage","getItem","exp","Date","now","push","render","show","variant","message","state","startsWith","split","spinner","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setChangePasswordData, saveNewPassword } from \"../../actions\";\r\nimport ProfileBar from \"../ProfileBar\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport spinner from \"../spinner.svg\";\r\nimport { conversations, login } from \"../../utils/Routes\";\r\nimport history from \"../../utils/history\";\r\nimport \"./ChangePassword.scss\";\r\n\r\nclass index extends Component {\r\n  onFieldChange = (event, field) => {\r\n    const { changePassword } = this.props;\r\n    if (field === \"current\") {\r\n      this.props.setChangePasswordData(\r\n        event.target.value,\r\n        changePassword.newPassword,\r\n        changePassword.confirmPassword\r\n      );\r\n    } else if (field === \"new\") {\r\n      this.props.setChangePasswordData(\r\n        changePassword.currentPassword,\r\n        event.target.value,\r\n        changePassword.confirmPassword\r\n      );\r\n    } else if (field === \"confirm\") {\r\n      this.props.setChangePasswordData(\r\n        changePassword.currentPassword,\r\n        changePassword.newPassword,\r\n        event.target.value\r\n      );\r\n    }\r\n  };\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    this.props.saveNewPassword();\r\n  };\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem(\"token\");\r\n    const exp = localStorage.getItem(\"exp\");\r\n\r\n    if (!token || +exp < Date.now()) {\r\n      history.push(login);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let show, variant, message;\r\n    if (this.props.changePassword.state?.startsWith(\"validation\")) {\r\n      show = true;\r\n      variant = \"danger\";\r\n      message = this.props.changePassword.state.split(\",\")[1];\r\n    } else if (this.props.changePassword.state === \"saved\") {\r\n      show = true;\r\n      variant = \"success\";\r\n      message = \"Password changed successfully !\";\r\n    } else if (this.props.changePassword.state === \"failed\") {\r\n      show = true;\r\n      variant = \"danger\";\r\n      message = \"Something went wrong ! May be current password is wrong.\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"profile\">\r\n        <ProfileBar />\r\n        <div className=\"profile-mainWrapper\">\r\n          <div className=\"container profile-formWrapper\">\r\n            <Link to={conversations} className=\"back-to-conversation\">\r\n              <i className=\"bi bi-arrow-left-short\"></i>\r\n              <span>Conversations</span>\r\n            </Link>\r\n            <div className=\"notification\">\r\n              <Alert show={show} variant={variant}>\r\n                <p>{message}</p>\r\n              </Alert>\r\n            </div>\r\n            <h3 className=\"profile-heading\">Change Password</h3>\r\n            <form onSubmit={this.onSubmit} className=\"changePassword-form\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Current Password\"\r\n                required\r\n                value={this.props.changePassword.currentPassword}\r\n                onChange={(event) => {\r\n                  this.onFieldChange(event, \"current\");\r\n                }}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"New Password\"\r\n                required\r\n                value={this.props.changePassword.newPassword}\r\n                onChange={(event) => this.onFieldChange(event, \"new\")}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Confirm Password\"\r\n                required\r\n                value={this.props.changePassword.confirmPassword}\r\n                onChange={(event) => this.onFieldChange(event, \"confirm\")}\r\n              />\r\n              <button className=\"profile-submitBtn\">\r\n                {this.props.changePassword.state === \"saving\" ? (\r\n                  <img\r\n                    className=\"icon-spinner\"\r\n                    src={spinner}\r\n                    alt=\"spinner icon svg\"\r\n                  />\r\n                ) : (\r\n                  \"Save\"\r\n                )}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ changePassword, auth }) => {\r\n  return { changePassword, auth };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setChangePasswordData,\r\n  saveNewPassword,\r\n})(index);\r\n"]},"metadata":{},"sourceType":"module"}