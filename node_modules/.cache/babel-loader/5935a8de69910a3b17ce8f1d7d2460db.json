{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ghassen\\\\Desktop\\\\lyoum\\\\3\\\\chat-app-client\\\\src\\\\components\\\\AuthComponent\\\\Forgotpassword.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setForgotPassword, sendForgotPassword } from \"../../actions\";\nimport Alert from \"react-bootstrap/Alert\";\nimport spinner from \"../spinner.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ForgotPassword extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      if (this.props.forgotPassword.state === \"submitting\") return;\n      this.props.sendForgotPassword();\n    };\n  }\n\n  componentDidMount() {\n    this.props.setForgotPassword(\"\", \"empty\", true);\n  }\n\n  componentWillUnmount() {\n    this.props.setForgotPassword(\"\", \"empty\", false);\n  }\n\n  render() {\n    if (!this.props.forgotPassword) return \"\";\n    const show = this.props.forgotPassword.state === \"submitted\" || this.props.forgotPassword.state === \"failed\";\n    const variant = this.props.forgotPassword.state === \"submitted\" ? \"success\" : \"danger\";\n    const failedMessage = variant === \"success\" ? \"An email has been sent to your mail account. It will only valid for 10min\" : \"Either there is no user with this email or has not activated account\";\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: this.onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-warning\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          show: show,\n          variant: variant,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: failedMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form__heading\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form__forgotPasswordDesc\",\n        children: \"Get reset token to your mailbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__fieldsWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: this.props.forgotPassword.email,\n          required: true,\n          autoFocus: true,\n          onChange: event => this.props.setForgotPassword(event.target.value, \"typing\", true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"form__submitBtn\",\n        children: this.props.forgotPassword.state === \"submitting\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"icon-spinner\",\n          src: spinner,\n          alt: \"spinner icon svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this) : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  forgotPassword\n}) => {\n  return {\n    forgotPassword\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setForgotPassword,\n  sendForgotPassword\n})(ForgotPassword);","map":{"version":3,"sources":["C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/src/components/AuthComponent/Forgotpassword.jsx"],"names":["React","connect","setForgotPassword","sendForgotPassword","Alert","ForgotPassword","Component","onSubmit","event","preventDefault","props","forgotPassword","state","componentDidMount","componentWillUnmount","render","show","variant","failedMessage","email","target","value","spinner","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setForgotPassword, sendForgotPassword } from \"../../actions\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport spinner from \"../spinner.svg\";\r\n\r\nclass ForgotPassword extends React.Component {\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.props.forgotPassword.state === \"submitting\") return;\r\n\r\n    this.props.sendForgotPassword();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.setForgotPassword(\"\", \"empty\", true);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.setForgotPassword(\"\", \"empty\", false);\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.forgotPassword) return \"\";\r\n\r\n    const show =\r\n      this.props.forgotPassword.state === \"submitted\" ||\r\n      this.props.forgotPassword.state === \"failed\";\r\n\r\n    const variant =\r\n      this.props.forgotPassword.state === \"submitted\" ? \"success\" : \"danger\";\r\n\r\n    const failedMessage =\r\n      variant === \"success\"\r\n        ? \"An email has been sent to your mail account. It will only valid for 10min\"\r\n        : \"Either there is no user with this email or has not activated account\";\r\n\r\n    return (\r\n      <form className=\"form\" onSubmit={this.onSubmit}>\r\n        <div className=\"signup-warning\">\r\n          <Alert show={show} variant={variant}>\r\n            <p>{failedMessage}</p>\r\n          </Alert>\r\n        </div>\r\n\r\n        <h2 className=\"form__heading\">Forgot Password</h2>\r\n\r\n        <p className=\"form__forgotPasswordDesc\">\r\n          Get reset token to your mailbox\r\n        </p>\r\n\r\n        <div className=\"form__fieldsWrapper\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={this.props.forgotPassword.email}\r\n            required\r\n            autoFocus\r\n            onChange={(event) =>\r\n              this.props.setForgotPassword(event.target.value, \"typing\", true)\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"form__submitBtn\">\r\n          {this.props.forgotPassword.state === \"submitting\" ? (\r\n            <img\r\n              className=\"icon-spinner\"\r\n              src={spinner}\r\n              alt=\"spinner icon svg\"\r\n            />\r\n          ) : (\r\n            \"Send\"\r\n          )}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ forgotPassword }) => {\r\n  return { forgotPassword };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setForgotPassword,\r\n  sendForgotPassword,\r\n})(ForgotPassword);\r\n"]},"metadata":{},"sourceType":"module"}