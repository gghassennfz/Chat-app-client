{"ast":null,"code":"import _classCallCheck from\"C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{connect}from\"react-redux\";import{setActiveConversation,createConversation}from\"../../actions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ConversationCard=/*#__PURE__*/function(_React$Component){_inherits(ConversationCard,_React$Component);var _super=_createSuper(ConversationCard);function ConversationCard(){var _this;_classCallCheck(this,ConversationCard);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onSetActiveConver=function(){if(!_this.props.conversation){_this.props.createConversation(_this.props.id);}else{_this.props.setActiveConversation(_this.props.conversation);}};return _this;}_createClass(ConversationCard,[{key:\"render\",value:function render(){var _this2=this;var cardClass;if(this.props.activeConversation){cardClass=this.props.activeConversation.user1===this.props.userID||this.props.activeConversation.user2===this.props.userID?\"conversation-card conversation-card-active\":\"conversation-card\";}else{cardClass=\"conversation-card\";}var currentUserMsg=this.props.lastMsgUser===this.props.auth.user._id;return/*#__PURE__*/_jsxs(\"div\",{onClick:function onClick(){_this2.onSetActiveConver();_this2.props.setMessageContainerClass(true);},className:cardClass,children:[/*#__PURE__*/_jsx(\"picture\",{className:\"conversation-card-avatar\",children:/*#__PURE__*/_jsx(\"img\",{src:this.props.userAvatar,alt:\"default avatar for users\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"conversation-card-usertext\",children:[/*#__PURE__*/_jsx(\"h6\",{className:\"conversation-card-username\",children:this.props.username}),this.props.lastMsg?/*#__PURE__*/_jsxs(\"p\",{className:currentUserMsg?\"conversation-card-lastMsg\":\"conversation-card-lastMsg conversation-card-lastMsg-other\",children:[currentUserMsg?\"You: \":null,this.props.lastMsg]}):null]})]});}}]);return ConversationCard;}(React.Component);var mapStateToProps=function mapStateToProps(_ref){var activeConversation=_ref.activeConversation,auth=_ref.auth;return{activeConversation:activeConversation,auth:auth};};export default connect(mapStateToProps,{setActiveConversation:setActiveConversation,createConversation:createConversation})(ConversationCard);","map":{"version":3,"sources":["C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/src/components/Conversations/ConversationCard.jsx"],"names":["React","connect","setActiveConversation","createConversation","ConversationCard","onSetActiveConver","props","conversation","id","cardClass","activeConversation","user1","userID","user2","currentUserMsg","lastMsgUser","auth","user","_id","setMessageContainerClass","userAvatar","username","lastMsg","Component","mapStateToProps"],"mappings":"4oBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OAASC,qBAAT,CAAgCC,kBAAhC,KAA0D,eAA1D,C,2FAEMC,CAAAA,gB,+WACJC,iB,CAAoB,UAAM,CACxB,GAAI,CAAC,MAAKC,KAAL,CAAWC,YAAhB,CAA8B,CAC5B,MAAKD,KAAL,CAAWH,kBAAX,CAA8B,MAAKG,KAAL,CAAWE,EAAzC,EACD,CAFD,IAEO,CACL,MAAKF,KAAL,CAAWJ,qBAAX,CAAiC,MAAKI,KAAL,CAAWC,YAA5C,EACD,CACF,C,kEAED,iBAAS,iBACP,GAAIE,CAAAA,SAAJ,CACA,GAAI,KAAKH,KAAL,CAAWI,kBAAf,CAAmC,CACjCD,SAAS,CACP,KAAKH,KAAL,CAAWI,kBAAX,CAA8BC,KAA9B,GAAwC,KAAKL,KAAL,CAAWM,MAAnD,EACA,KAAKN,KAAL,CAAWI,kBAAX,CAA8BG,KAA9B,GAAwC,KAAKP,KAAL,CAAWM,MADnD,CAEI,4CAFJ,CAGI,mBAJN,CAKD,CAND,IAMO,CACLH,SAAS,CAAG,mBAAZ,CACD,CAED,GAAMK,CAAAA,cAAc,CAAG,KAAKR,KAAL,CAAWS,WAAX,GAA2B,KAAKT,KAAL,CAAWU,IAAX,CAAgBC,IAAhB,CAAqBC,GAAvE,CAEA,mBACE,aACE,OAAO,CAAE,kBAAM,CACb,MAAI,CAACb,iBAAL,GACA,MAAI,CAACC,KAAL,CAAWa,wBAAX,CAAoC,IAApC,EACD,CAJH,CAKE,SAAS,CAAEV,SALb,wBAOE,gBAAS,SAAS,CAAC,0BAAnB,uBACE,YAAK,GAAG,CAAE,KAAKH,KAAL,CAAWc,UAArB,CAAiC,GAAG,CAAC,0BAArC,EADF,EAPF,cAUE,aAAK,SAAS,CAAC,4BAAf,wBACE,WAAI,SAAS,CAAC,4BAAd,UAA4C,KAAKd,KAAL,CAAWe,QAAvD,EADF,CAEG,KAAKf,KAAL,CAAWgB,OAAX,cACC,WACE,SAAS,CACPR,cAAc,CACV,2BADU,CAEV,2DAJR,WAOGA,cAAc,CAAG,OAAH,CAAa,IAP9B,CAQG,KAAKR,KAAL,CAAWgB,OARd,GADD,CAWG,IAbN,GAVF,GADF,CA4BD,C,8BAnD4BtB,KAAK,CAACuB,S,EAsDrC,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAkC,IAA/Bd,CAAAA,kBAA+B,MAA/BA,kBAA+B,CAAXM,IAAW,MAAXA,IAAW,CACxD,MAAO,CAAEN,kBAAkB,CAAlBA,kBAAF,CAAsBM,IAAI,CAAJA,IAAtB,CAAP,CACD,CAFD,CAIA,cAAef,CAAAA,OAAO,CAACuB,eAAD,CAAkB,CACtCtB,qBAAqB,CAArBA,qBADsC,CAEtCC,kBAAkB,CAAlBA,kBAFsC,CAAlB,CAAP,CAGZC,gBAHY,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setActiveConversation, createConversation } from \"../../actions\";\r\n\r\nclass ConversationCard extends React.Component {\r\n  onSetActiveConver = () => {\r\n    if (!this.props.conversation) {\r\n      this.props.createConversation(this.props.id);\r\n    } else {\r\n      this.props.setActiveConversation(this.props.conversation);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let cardClass;\r\n    if (this.props.activeConversation) {\r\n      cardClass =\r\n        this.props.activeConversation.user1 === this.props.userID ||\r\n        this.props.activeConversation.user2 === this.props.userID\r\n          ? \"conversation-card conversation-card-active\"\r\n          : \"conversation-card\";\r\n    } else {\r\n      cardClass = \"conversation-card\";\r\n    }\r\n\r\n    const currentUserMsg = this.props.lastMsgUser === this.props.auth.user._id;\r\n\r\n    return (\r\n      <div\r\n        onClick={() => {\r\n          this.onSetActiveConver();\r\n          this.props.setMessageContainerClass(true);\r\n        }}\r\n        className={cardClass}\r\n      >\r\n        <picture className=\"conversation-card-avatar\">\r\n          <img src={this.props.userAvatar} alt=\"default avatar for users\" />\r\n        </picture>\r\n        <div className=\"conversation-card-usertext\">\r\n          <h6 className=\"conversation-card-username\">{this.props.username}</h6>\r\n          {this.props.lastMsg ? (\r\n            <p\r\n              className={\r\n                currentUserMsg\r\n                  ? \"conversation-card-lastMsg\"\r\n                  : \"conversation-card-lastMsg conversation-card-lastMsg-other\"\r\n              }\r\n            >\r\n              {currentUserMsg ? \"You: \" : null}\r\n              {this.props.lastMsg}\r\n            </p>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ activeConversation, auth }) => {\r\n  return { activeConversation, auth };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setActiveConversation,\r\n  createConversation,\r\n})(ConversationCard);\r\n"]},"metadata":{},"sourceType":"module"}