{"ast":null,"code":"import _classCallCheck from\"C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{connect}from\"react-redux\";import{setForgotPassword,sendForgotPassword}from\"../../actions\";import Alert from\"react-bootstrap/Alert\";import spinner from\"../spinner.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ForgotPassword=/*#__PURE__*/function(_React$Component){_inherits(ForgotPassword,_React$Component);var _super=_createSuper(ForgotPassword);function ForgotPassword(){var _this;_classCallCheck(this,ForgotPassword);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onSubmit=function(event){event.preventDefault();if(_this.props.forgotPassword.state===\"submitting\")return;_this.props.sendForgotPassword();};return _this;}_createClass(ForgotPassword,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.setForgotPassword(\"\",\"empty\",true);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.props.setForgotPassword(\"\",\"empty\",false);}},{key:\"render\",value:function render(){var _this2=this;if(!this.props.forgotPassword)return\"\";var show=this.props.forgotPassword.state===\"submitted\"||this.props.forgotPassword.state===\"failed\";var variant=this.props.forgotPassword.state===\"submitted\"?\"success\":\"danger\";var failedMessage=variant===\"success\"?\"An email has been sent to your mail account. It will only valid for 10min\":\"Either there is no user with this email or has not activated account\";return/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:this.onSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:\"signup-warning\",children:/*#__PURE__*/_jsx(Alert,{show:show,variant:variant,children:/*#__PURE__*/_jsx(\"p\",{children:failedMessage})})}),/*#__PURE__*/_jsx(\"h2\",{className:\"form__heading\",children:\"Forgot Password\"}),/*#__PURE__*/_jsx(\"p\",{className:\"form__forgotPasswordDesc\",children:\"Get reset token to your mailbox\"}),/*#__PURE__*/_jsx(\"div\",{className:\"form__fieldsWrapper\",children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:this.props.forgotPassword.email,required:true,autoFocus:true,onChange:function onChange(event){return _this2.props.setForgotPassword(event.target.value,\"typing\",true);}})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"form__submitBtn\",children:this.props.forgotPassword.state===\"submitting\"?/*#__PURE__*/_jsx(\"img\",{className:\"icon-spinner\",src:spinner,alt:\"spinner icon svg\"}):\"Send\"})]});}}]);return ForgotPassword;}(React.Component);var mapStateToProps=function mapStateToProps(_ref){var forgotPassword=_ref.forgotPassword;return{forgotPassword:forgotPassword};};export default connect(mapStateToProps,{setForgotPassword:setForgotPassword,sendForgotPassword:sendForgotPassword})(ForgotPassword);","map":{"version":3,"sources":["C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/src/components/AuthComponent/Forgotpassword.jsx"],"names":["React","connect","setForgotPassword","sendForgotPassword","Alert","ForgotPassword","onSubmit","event","preventDefault","props","forgotPassword","state","show","variant","failedMessage","email","target","value","spinner","Component","mapStateToProps"],"mappings":"4oBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OAASC,iBAAT,CAA4BC,kBAA5B,KAAsD,eAAtD,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,C,+HAGMC,CAAAA,c,uWACJC,Q,CAAW,SAACC,KAAD,CAAW,CACpBA,KAAK,CAACC,cAAN,GAEA,GAAI,MAAKC,KAAL,CAAWC,cAAX,CAA0BC,KAA1B,GAAoC,YAAxC,CAAsD,OAEtD,MAAKF,KAAL,CAAWN,kBAAX,GACD,C,2EAED,4BAAoB,CAClB,KAAKM,KAAL,CAAWP,iBAAX,CAA6B,EAA7B,CAAiC,OAAjC,CAA0C,IAA1C,EACD,C,oCAED,+BAAuB,CACrB,KAAKO,KAAL,CAAWP,iBAAX,CAA6B,EAA7B,CAAiC,OAAjC,CAA0C,KAA1C,EACD,C,sBAED,iBAAS,iBACP,GAAI,CAAC,KAAKO,KAAL,CAAWC,cAAhB,CAAgC,MAAO,EAAP,CAEhC,GAAME,CAAAA,IAAI,CACR,KAAKH,KAAL,CAAWC,cAAX,CAA0BC,KAA1B,GAAoC,WAApC,EACA,KAAKF,KAAL,CAAWC,cAAX,CAA0BC,KAA1B,GAAoC,QAFtC,CAIA,GAAME,CAAAA,OAAO,CACX,KAAKJ,KAAL,CAAWC,cAAX,CAA0BC,KAA1B,GAAoC,WAApC,CAAkD,SAAlD,CAA8D,QADhE,CAGA,GAAMG,CAAAA,aAAa,CACjBD,OAAO,GAAK,SAAZ,CACI,2EADJ,CAEI,sEAHN,CAKA,mBACE,cAAM,SAAS,CAAC,MAAhB,CAAuB,QAAQ,CAAE,KAAKP,QAAtC,wBACE,YAAK,SAAS,CAAC,gBAAf,uBACE,KAAC,KAAD,EAAO,IAAI,CAAEM,IAAb,CAAmB,OAAO,CAAEC,OAA5B,uBACE,mBAAIC,aAAJ,EADF,EADF,EADF,cAOE,WAAI,SAAS,CAAC,eAAd,6BAPF,cASE,UAAG,SAAS,CAAC,0BAAb,6CATF,cAaE,YAAK,SAAS,CAAC,qBAAf,uBACE,cACE,IAAI,CAAC,OADP,CAEE,WAAW,CAAC,OAFd,CAGE,KAAK,CAAE,KAAKL,KAAL,CAAWC,cAAX,CAA0BK,KAHnC,CAIE,QAAQ,KAJV,CAKE,SAAS,KALX,CAME,QAAQ,CAAE,kBAACR,KAAD,QACR,CAAA,MAAI,CAACE,KAAL,CAAWP,iBAAX,CAA6BK,KAAK,CAACS,MAAN,CAAaC,KAA1C,CAAiD,QAAjD,CAA2D,IAA3D,CADQ,EANZ,EADF,EAbF,cA0BE,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,iBAAhC,UACG,KAAKR,KAAL,CAAWC,cAAX,CAA0BC,KAA1B,GAAoC,YAApC,cACC,YACE,SAAS,CAAC,cADZ,CAEE,GAAG,CAAEO,OAFP,CAGE,GAAG,CAAC,kBAHN,EADD,CAOC,MARJ,EA1BF,GADF,CAwCD,C,4BAxE0BlB,KAAK,CAACmB,S,EA2EnC,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAwB,IAArBV,CAAAA,cAAqB,MAArBA,cAAqB,CAC9C,MAAO,CAAEA,cAAc,CAAdA,cAAF,CAAP,CACD,CAFD,CAIA,cAAeT,CAAAA,OAAO,CAACmB,eAAD,CAAkB,CACtClB,iBAAiB,CAAjBA,iBADsC,CAEtCC,kBAAkB,CAAlBA,kBAFsC,CAAlB,CAAP,CAGZE,cAHY,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setForgotPassword, sendForgotPassword } from \"../../actions\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport spinner from \"../spinner.svg\";\r\n\r\nclass ForgotPassword extends React.Component {\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.props.forgotPassword.state === \"submitting\") return;\r\n\r\n    this.props.sendForgotPassword();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.setForgotPassword(\"\", \"empty\", true);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.setForgotPassword(\"\", \"empty\", false);\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.forgotPassword) return \"\";\r\n\r\n    const show =\r\n      this.props.forgotPassword.state === \"submitted\" ||\r\n      this.props.forgotPassword.state === \"failed\";\r\n\r\n    const variant =\r\n      this.props.forgotPassword.state === \"submitted\" ? \"success\" : \"danger\";\r\n\r\n    const failedMessage =\r\n      variant === \"success\"\r\n        ? \"An email has been sent to your mail account. It will only valid for 10min\"\r\n        : \"Either there is no user with this email or has not activated account\";\r\n\r\n    return (\r\n      <form className=\"form\" onSubmit={this.onSubmit}>\r\n        <div className=\"signup-warning\">\r\n          <Alert show={show} variant={variant}>\r\n            <p>{failedMessage}</p>\r\n          </Alert>\r\n        </div>\r\n\r\n        <h2 className=\"form__heading\">Forgot Password</h2>\r\n\r\n        <p className=\"form__forgotPasswordDesc\">\r\n          Get reset token to your mailbox\r\n        </p>\r\n\r\n        <div className=\"form__fieldsWrapper\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={this.props.forgotPassword.email}\r\n            required\r\n            autoFocus\r\n            onChange={(event) =>\r\n              this.props.setForgotPassword(event.target.value, \"typing\", true)\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"form__submitBtn\">\r\n          {this.props.forgotPassword.state === \"submitting\" ? (\r\n            <img\r\n              className=\"icon-spinner\"\r\n              src={spinner}\r\n              alt=\"spinner icon svg\"\r\n            />\r\n          ) : (\r\n            \"Send\"\r\n          )}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ forgotPassword }) => {\r\n  return { forgotPassword };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setForgotPassword,\r\n  sendForgotPassword,\r\n})(ForgotPassword);\r\n"]},"metadata":{},"sourceType":"module"}