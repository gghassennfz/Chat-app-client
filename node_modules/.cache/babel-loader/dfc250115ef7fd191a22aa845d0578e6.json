{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ghassen\\\\Desktop\\\\lyoum\\\\3\\\\chat-app-client\\\\src\\\\components\\\\Profile\\\\index.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { setProfileData, saveProfileData, deleteAccount, logout } from \"../../actions\";\nimport { conversations, login } from \"../../utils/Routes\";\nimport ProfileBar from \"../ProfileBar\";\nimport defaultAvatar from \"../avatar.svg\";\nimport Alert from \"react-bootstrap/Alert\";\nimport spinner from \"../spinner.svg\";\nimport \"./Profile.scss\";\nimport history from \"../../utils/history\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass index extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      deleteAccountModal: false,\n      deleteAccountLoading: false\n    };\n    this.profileAvatar = /*#__PURE__*/React.createRef();\n\n    this.setDeleteAccountModal = () => {\n      this.setState({\n        deleteAccountModal: !this.state.deleteAccountModal\n      });\n    };\n\n    this.onFieldChange = (event, field) => {\n      const {\n        profileData\n      } = this.props;\n\n      if (field === \"username\") {\n        this.props.setProfileData(event.target.value, profileData.email);\n      } else if (field === \"email\") {\n        this.props.setProfileData(profileData.username, event.target.value);\n      } else if (field === \"avatar\") {\n        const reader = new FileReader();\n        reader.readAsDataURL(event.target.files[0]);\n\n        reader.onload = event => {\n          this.profileAvatar.current.src = event.target.result;\n        };\n      }\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n\n      if (this.props.profileData.state !== \"saving\") {\n        this.props.saveProfileData();\n      }\n    };\n\n    this.userAvatar = user => {\n      var _user$avatar;\n\n      let image = user === null || user === void 0 ? void 0 : (_user$avatar = user.avatar) === null || _user$avatar === void 0 ? void 0 : _user$avatar.data;\n\n      if (image) {\n        image = this.bufferToBase64(image);\n        return `data:image/jpeg;base64,${image}`;\n      }\n\n      return null;\n    };\n\n    this.deleteMe = () => {\n      this.setState({\n        deleteAccountLoading: true\n      });\n      this.props.deleteAccount();\n      this.props.logout();\n    };\n  }\n\n  bufferToBase64(buffer) {\n    let binary = \"\";\n    let bytes = new Uint8Array(buffer);\n    let len = bytes.byteLength;\n\n    for (let i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n\n    return window.btoa(binary);\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n    const exp = localStorage.getItem(\"exp\");\n\n    if (!token || +exp < Date.now()) {\n      history.push(login);\n    }\n\n    if (this.props.auth.user) this.props.setProfileData(this.props.auth.user.username, this.props.auth.user.email);\n  }\n\n  render() {\n    if (!this.props.auth.user) return \"\";\n    let show, message, variant;\n\n    if (this.props.profileData.state === \"saved\") {\n      variant = \"success\";\n      show = true;\n      message = \"Profile saved successfully !\";\n    } else if (this.props.profileData.state === \"failed\") {\n      variant = \"danger\";\n      show = true;\n      message = \"Something went wrong ! Maybe user with this email already exists, try using another email.\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(ProfileBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-mainWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container profile-formWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: conversations,\n            className: \"back-to-conversation\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-arrow-left-short\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Conversations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification\",\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              show: show,\n              variant: variant,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"profile-heading\",\n            children: \"My Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.onSubmit,\n            className: \"profile-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"picture\", {\n              className: \"profile-form-avatar\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                ref: this.profileAvatar,\n                src: this.userAvatar(this.props.auth.user) || defaultAvatar,\n                alt: \"user avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"user-avatar\",\n                  type: \"file\",\n                  accept: \"image/*\",\n                  onChange: event => this.onFieldChange(event, \"avatar\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this), \"Upload\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-form-fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"joined-at\",\n                children: [\"Joined at:\", \" \", new Date(this.props.auth.user.joinedAt).toDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Username\",\n                required: true,\n                value: this.props.profileData.username,\n                onChange: event => {\n                  this.onFieldChange(event, \"username\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email\",\n                required: true,\n                value: this.props.profileData.email,\n                onChange: event => this.onFieldChange(event, \"email\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"profile-submitBtn\",\n                children: this.props.profileData.state === \"saving\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"icon-spinner\",\n                  src: spinner,\n                  alt: \"spinner icon svg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this) : \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.setDeleteAccountModal,\n            className: \"delete-account-btn\",\n            children: \"Delete Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), this.state.deleteAccountModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-account-modal-bg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delete-account-modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Delete Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Are you sure you want to delete your account ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.deleteMe,\n            className: \"delete\",\n            children: this.state.deleteAccountLoading ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"icon-spinner\",\n              src: spinner,\n              alt: \"spinner icon svg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this) : \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.setDeleteAccountModal,\n            className: \"cancel\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  auth,\n  profileData\n}) => {\n  return {\n    auth,\n    profileData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setProfileData,\n  saveProfileData,\n  deleteAccount,\n  logout\n})(index);","map":{"version":3,"sources":["C:/Users/Ghassen/Desktop/lyoum/3/chat-app-client/src/components/Profile/index.jsx"],"names":["React","Component","connect","Link","setProfileData","saveProfileData","deleteAccount","logout","conversations","login","ProfileBar","Alert","history","index","state","deleteAccountModal","deleteAccountLoading","profileAvatar","createRef","setDeleteAccountModal","setState","onFieldChange","event","field","profileData","props","target","value","email","username","reader","FileReader","readAsDataURL","files","onload","current","src","result","onSubmit","preventDefault","userAvatar","user","image","avatar","data","bufferToBase64","deleteMe","buffer","binary","bytes","Uint8Array","len","byteLength","i","String","fromCharCode","window","btoa","componentDidMount","token","localStorage","getItem","exp","Date","now","push","auth","render","show","message","variant","defaultAvatar","joinedAt","toDateString","spinner","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  setProfileData,\r\n  saveProfileData,\r\n  deleteAccount,\r\n  logout,\r\n} from \"../../actions\";\r\nimport { conversations, login } from \"../../utils/Routes\";\r\nimport ProfileBar from \"../ProfileBar\";\r\nimport defaultAvatar from \"../avatar.svg\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport spinner from \"../spinner.svg\";\r\nimport \"./Profile.scss\";\r\nimport history from \"../../utils/history\";\r\n\r\nclass index extends Component {\r\n  state = { deleteAccountModal: false, deleteAccountLoading: false };\r\n  profileAvatar = React.createRef();\r\n\r\n  setDeleteAccountModal = () => {\r\n    this.setState({ deleteAccountModal: !this.state.deleteAccountModal });\r\n  };\r\n\r\n  onFieldChange = (event, field) => {\r\n    const { profileData } = this.props;\r\n\r\n    if (field === \"username\") {\r\n      this.props.setProfileData(event.target.value, profileData.email);\r\n    } else if (field === \"email\") {\r\n      this.props.setProfileData(profileData.username, event.target.value);\r\n    } else if (field === \"avatar\") {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event) => {\r\n        this.profileAvatar.current.src = event.target.result;\r\n      };\r\n    }\r\n  };\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.props.profileData.state !== \"saving\") {\r\n      this.props.saveProfileData();\r\n    }\r\n  };\r\n\r\n  bufferToBase64(buffer) {\r\n    let binary = \"\";\r\n    let bytes = new Uint8Array(buffer);\r\n    let len = bytes.byteLength;\r\n    for (let i = 0; i < len; i++) {\r\n      binary += String.fromCharCode(bytes[i]);\r\n    }\r\n    return window.btoa(binary);\r\n  }\r\n\r\n  userAvatar = (user) => {\r\n    let image = user?.avatar?.data;\r\n    if (image) {\r\n      image = this.bufferToBase64(image);\r\n      return `data:image/jpeg;base64,${image}`;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  deleteMe = () => {\r\n    this.setState({ deleteAccountLoading: true });\r\n    this.props.deleteAccount();\r\n    this.props.logout();\r\n  };\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem(\"token\");\r\n    const exp = localStorage.getItem(\"exp\");\r\n\r\n    if (!token || +exp < Date.now()) {\r\n      history.push(login);\r\n    }\r\n\r\n    if (this.props.auth.user)\r\n      this.props.setProfileData(\r\n        this.props.auth.user.username,\r\n        this.props.auth.user.email\r\n      );\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.auth.user) return \"\";\r\n\r\n    let show, message, variant;\r\n    if (this.props.profileData.state === \"saved\") {\r\n      variant = \"success\";\r\n      show = true;\r\n      message = \"Profile saved successfully !\";\r\n    } else if (this.props.profileData.state === \"failed\") {\r\n      variant = \"danger\";\r\n      show = true;\r\n      message =\r\n        \"Something went wrong ! Maybe user with this email already exists, try using another email.\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"profile\">\r\n        <ProfileBar />\r\n        <div className=\"profile-mainWrapper\">\r\n          <div className=\"container profile-formWrapper\">\r\n            <Link to={conversations} className=\"back-to-conversation\">\r\n              <i className=\"bi bi-arrow-left-short\"></i>\r\n              <span>Conversations</span>\r\n            </Link>\r\n            <div className=\"notification\">\r\n              <Alert show={show} variant={variant}>\r\n                <p>{message}</p>\r\n              </Alert>\r\n            </div>\r\n            <h3 className=\"profile-heading\">My Profile</h3>\r\n            <form onSubmit={this.onSubmit} className=\"profile-form\">\r\n              <picture className=\"profile-form-avatar\">\r\n                <img\r\n                  ref={this.profileAvatar}\r\n                  src={this.userAvatar(this.props.auth.user) || defaultAvatar}\r\n                  alt=\"user avatar\"\r\n                />\r\n                <label>\r\n                  <input\r\n                    className=\"user-avatar\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={(event) => this.onFieldChange(event, \"avatar\")}\r\n                  />\r\n                  Upload\r\n                </label>\r\n              </picture>\r\n              <div className=\"profile-form-fields\">\r\n                <p className=\"joined-at\">\r\n                  Joined at:{\" \"}\r\n                  {new Date(this.props.auth.user.joinedAt).toDateString()}\r\n                </p>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Username\"\r\n                  required\r\n                  value={this.props.profileData.username}\r\n                  onChange={(event) => {\r\n                    this.onFieldChange(event, \"username\");\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                  value={this.props.profileData.email}\r\n                  onChange={(event) => this.onFieldChange(event, \"email\")}\r\n                />\r\n                <button className=\"profile-submitBtn\">\r\n                  {this.props.profileData.state === \"saving\" ? (\r\n                    <img\r\n                      className=\"icon-spinner\"\r\n                      src={spinner}\r\n                      alt=\"spinner icon svg\"\r\n                    />\r\n                  ) : (\r\n                    \"Save\"\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </form>\r\n            <button\r\n              onClick={this.setDeleteAccountModal}\r\n              className=\"delete-account-btn\"\r\n            >\r\n              Delete Account\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.state.deleteAccountModal ? (\r\n          <div className=\"delete-account-modal-bg\">\r\n            <div className=\"delete-account-modal\">\r\n              <h3>Delete Account</h3>\r\n              <p>Are you sure you want to delete your account ?</p>\r\n              <button onClick={this.deleteMe} className=\"delete\">\r\n                {this.state.deleteAccountLoading ? (\r\n                  <img\r\n                    className=\"icon-spinner\"\r\n                    src={spinner}\r\n                    alt=\"spinner icon svg\"\r\n                  />\r\n                ) : (\r\n                  \"Delete\"\r\n                )}\r\n              </button>\r\n              <button onClick={this.setDeleteAccountModal} className=\"cancel\">\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth, profileData }) => {\r\n  return { auth, profileData };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setProfileData,\r\n  saveProfileData,\r\n  deleteAccount,\r\n  logout,\r\n})(index);\r\n"]},"metadata":{},"sourceType":"module"}